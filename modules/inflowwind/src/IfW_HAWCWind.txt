###################################################################################################################################
# Registry for IfW_HAWCWind, creates MODULE IfW_HAWCWind_Types
# Module IfW_HAWCWind_Types contains all of the user-defined types needed in IfW_HAWCWind. It also contains copy, destroy, pack, and
# unpack routines associated with each defined data types.
###################################################################################################################################
# Entries are of the form
# keyword <IfW_HAWCWind[/ModuleAbvr]> <TypeName>   <FieldType>    <FieldName>  <Dims>  <Ctrl> <DNAME> <DESCRIP> <UNITS>
###################################################################################################################################

include Registry_NWTC_Library.txt


#########################

# Init Input
typedef IfW_HAWCWind/IfW_HAWCWind   InitInputType  CHARACTER(1024)   WindFileName      {3}   -     -     "Name of the wind file to use"                              -
typedef  ^                       ^                 IntKi             SumFileUnit       -     -     -     "Unit number for the summary file (-1 for none).  Provided by IfW." -
typedef  ^                       ^                 IntKi             nx                -     0     -     "Number of grids in the x direction (in the 3 files above)" -
typedef  ^                       ^                 IntKi             ny                -     0     -     "Number of grids in the y direction (in the 3 files above)" -
typedef  ^                       ^                 IntKi             nz                -     0     -     "Number of grids in the z direction (in the 3 files above)" -
typedef  ^                       ^                 IntKi             ScaleMethod       -     0     -     "Turbulence scaling method [0=none, 1=direct scaling, 2= calculate scaling factor based on a desired standard deviation]"  -
typedef  ^                       ^                 ReKi              SF                3     0     -     "Turbulence scaling factor for each direction [ScaleMethod=1]"   -
typedef  ^                       ^                 ReKi              SigmaF            3     0     -     "Turbulence standard deviation to calculate scaling from in each direction [ScaleMethod=2]"   -
#typedef  ^                       ^                 ReKi              TStart            -     0     -     ""                                                          -
#typedef  ^                       ^                 ReKi              TEnd              -     0     -     ""                                                          -
typedef  ^                       ^                 ReKi              dx                -     0     -     "size of grids in the x direction (in the 3 files above)" -
typedef  ^                       ^                 ReKi              dy                -     0     -     "size of grids in the y direction (in the 3 files above)" -
typedef  ^                       ^                 ReKi              dz                -     0     -     "size of grids in the z direction (in the 3 files above)" -
typedef  ^                       ^                 IntKi             WindProfileType   -     -     -     "Wind profile type (0=constant;1=logarithmic;2=power law)" -
typedef  ^                       ^                 ReKi              RefHt             -     0     -     "Reference (hub) height of the grid"                        meters
typedef  ^                       ^                 ReKi              URef              -     0     -     "Mean u-component wind speed at the reference height"       meters
typedef  ^                       ^                 ReKi              PLExp             -     0     -     "Power law exponent (used for PL wind profile type only)"   -
typedef  ^                       ^                 ReKi              Z0                -     0     -     "Surface roughness length (used for LOG wind profile type only)"  -


# Init Output
typedef  ^                       InitOutputType    ProgDesc          Ver               -     -     -     "Version information of HAWCWind submodule"                     -
typedef  ^                       ^                 ReKi              SF                3     0     -     "Turbulence scaling factor for each direction direction"   -


# ..... States not used by this module ...................................................................................................................
typedef  ^                    ContinuousStateType  ReKi           DummyContState    -     -     -     "Remove this variable if you have continuous states"           -
typedef  ^                    DiscreteStateType    ReKi           DummyDiscState    -     -     -     "Remove this variable if you have discrete states"             -
typedef  ^                    ConstraintStateType  ReKi           DummyConstrState  -     -     -     "Remove this variable if you have constraint states"           -
typedef  ^                    OtherStateType       ReKi           DummyOtherState   -     -     -     "Remove this variable if you have other states"           -

# ..... Misc/Optimization variables.................................................................................................
# Define any data that are used only for efficiency purposes (these variables are not associated with time):
#   e.g. indices for searching in an array, large arrays that are local variables in any routine called multiple times, etc.
typedef    ^              MiscVarType          ReKi     DummyMiscVar - - -  "Remove this variable if you have misc variables" -

# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
typedef  ^                       ParameterType     IntKi             nx                -     0     -     "Number of grids in the x direction (in the 3 files above)" -
typedef  ^                       ^                 IntKi             ny                -     0     -     "Number of grids in the y direction (in the 3 files above)" -
typedef  ^                       ^                 IntKi             nz                -     0     -     "Number of grids in the z direction (in the 3 files above)" -
typedef  ^                       ^                 ReKi              RefHt             -     0     -     "Reference (hub) height of the grid"                        meters
typedef  ^                       ^                 SiKi              HAWCData          ::::  -     -     "Array of HAWC data"                                        -
typedef  ^                       ^                 ReKi              InitPosition      3     0     -     "the initial position of grid (distance in FF is offset)"    meters

typedef  ^                       ^                 ReKi              GridBase          -     0     -     "the height of the bottom of the grid"                      meters
typedef  ^                       ^                 ReKi              LengthX           -     -     -     "the grid length in the X direction (distance between point 1 and the next point 1 [because it is periodic])"                         meters
typedef  ^                       ^                 ReKi              LengthYHalf       -     -     -     "half the grid width"                                       meters
typedef  ^                       ^                 ReKi              deltaXInv         -     -     -     "multiplicative inverse of delta X"                         "1/m"
typedef  ^                       ^                 ReKi              deltaYInv         -     -     -     "multiplicative inverse of delta Y"                         "1/m"
typedef  ^                       ^                 ReKi              deltaZInv         -     -     -     "multiplicative inverse of delta Z"                         "1/m"

typedef  ^                       ^                 ReKi              URef              -     0     -     "Mean u-component wind speed at the reference height"       meters


# ..... Inputs ....................................................................................................................
# Define inputs that are not on this mesh here:
typedef  ^                       InputType         ReKi              Position          ::    -     -     "Array holding the input positions at a given timestep"     meters

