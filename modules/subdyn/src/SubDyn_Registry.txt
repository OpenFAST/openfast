##################### Registry for SubDyn ##################
# <keyword>	<ModuleName/ModName>	<TypeName>	<FieldType>	<FieldName>	<Dims>	<IO>	<DNAME>	<DESCRIP>	<UNITS>
#
# Use ^ as a shortcut for the value in the same column from the previous line.
###################################################################################################################################
# ...... Include files (definitions from NWTC Library) ............................................................................
include	Registry_NWTC_Library.txt

# <keyword>	<ModuleName/ModName>	<TypeName>	<FieldType>	<FieldName>	<Dims>	<IO>	<DNAME>	<DESCRIP>	<UNITS>
# Keyword	ModuleName/ModName	Derived data type	Field type	Variable name	Dimemsion of the variable	Initial value	not used	Description	Units

typedef SubDyn/SD IList    INTEGER    List  {:}    -   - "List of integers"

!       integer, dimension(:), pointer :: data => null()
!       type(IList), pointer :: next => null()

# ============================== Define Initialization Inputs (from glue code) here: ============================================================================================================================================
typedef SubDyn/SD InitInputType CHARACTER(1024) SDInputFile  - - -       "Name of the input file"
typedef ^   InitInputType       CHARACTER(1024) RootName     - - -       "SubDyn rootname"
typedef ^   InitInputType       ReKi            g            - - -       "Gravity acceleration"
typedef ^   InitInputType       ReKi            WtrDpth      - - -       "Water Depth (positive valued)"
typedef ^   InitInputType       ReKi            TP_RefPoint  {3} - -     "global position of transition piece reference point (could also be defined in SubDyn itself)"
typedef ^   InitInputType       ReKi            SubRotateZ   - - -       "Rotation angle in degrees about global Z"
typedef ^   InitInputType       ReKi            SoilStiffness ::: - -    "Soil stiffness matrices from SoilDyn" '(N/m, N-m/rad)'
typedef ^   InitInputType       MeshType        SoilMesh     - - -       "Mesh for soil stiffness locations" -
typedef ^   InitInputType       Logical         Linearize    - .FALSE. - "Flag that tells this module if the glue code wants to linearize." -

# ============================== Define Initialization outputs here: ============================================================================================================================================
typedef	^	InitOutputType	CHARACTER(ChanLen)	WriteOutputHdr	{:}	-	-	"Names of the output-to-file channels"	-
typedef	^	InitOutputType	CHARACTER(ChanLen)	WriteOutputUnt	{:}	-	-	"Units of the output-to-file channels"	-
typedef	^	InitOutputType	ProgDesc	Ver	-	-	-	"This module's name, version, and date"	-
# Linearization
typedef   ^        InitOutputType CHARACTER(LinChanLen) LinNames_y   {:}  -   -   "Names of the outputs used in linearization" -
typedef   ^        InitOutputType CHARACTER(LinChanLen) LinNames_x   {:}  -   -   "Names of the continuous states used in linearization" -
typedef   ^        InitOutputType CHARACTER(LinChanLen) LinNames_u   {:}  -   -   "Names of the inputs used in linearization" -
typedef   ^        InitOutputType LOGICAL               RotFrame_y   {:}  -   -   "Flag that tells FAST/MBC3 if the outputs used in linearization are in the rotating frame" -
typedef   ^        InitOutputType LOGICAL               RotFrame_x   {:}  -   -   "Flag that tells FAST/MBC3 if the continuous states used in linearization are in the rotating frame (not used for glue)" -
typedef   ^        InitOutputType LOGICAL               RotFrame_u   {:}  -   -   "Flag that tells FAST/MBC3 if the inputs used in linearization are in the rotating frame" -
typedef   ^        InitOutputType LOGICAL               IsLoad_u     {:}  -   -   "Flag that tells FAST if the inputs used in linearization are loads (for preconditioning matrix)" -
typedef   ^        InitOutputType IntKi                 DerivOrder_x {:}  -   -   "Integer that tells FAST/MBC3 the maximum derivative order of continuous states used in linearization" -

# ============================== Define Internal data types here: ============================================================================================================================================
typedef	SubDyn/SD	MeshAuxDataType	INTEGER	MemberID	-	-	-	"Member ID for Output"
typedef	^	MeshAuxDataType	INTEGER	NOutCnt 	-	-	-	"Number of Nodes for the output member"
typedef	^	MeshAuxDataType	INTEGER	NodeCnt 	{:}	-	-	"Node ordinal numbers for the output member"
typedef	^	MeshAuxDataType	INTEGER	NodeIDs 	{:}	-	-	"Node IDs associated with ordinal numbers for the output member"
typedef	^	MeshAuxDataType	INTEGER	ElmIDs  	{:}{:}	-	-	"Element IDs connected to each NodeIDs; max 10 elements"
typedef	^	MeshAuxDataType	INTEGER	ElmNds  	{:}{:}	-	-	"Flag to indicate 1st or 2nd node of element for each ElmIDs"
typedef	^	MeshAuxDataType	R8Ki   	Me      	{:}{:}{:}{:}	-	-	"Mass matrix connected to each joint element for outAll output"
typedef	^	MeshAuxDataType	R8Ki   	Ke      	{:}{:}{:}{:}	-	-	"Mass matrix connected to each joint element for outAll output"
typedef	^	MeshAuxDataType	R8Ki   	Fg      	{:}{:}{:}	-	-	"Gravity load vector connected to each joint element for requested member output"
# CB_MatArrays: Matrices and arrays for CB summary
typedef	^	CB_MatArrays	R8Ki   	MBB	{:}{:}	-	-	"FULL MBB ( no constraints applied)"
typedef	^	CB_MatArrays	R8Ki   	MBM	{:}{:}	-	-	"FULL MBM ( no constraints applied)"
typedef	^	CB_MatArrays	R8Ki   	KBB	{:}{:}	-	-	"FULL KBB ( no constraints applied)"
typedef	^	CB_MatArrays	R8Ki   	PhiL	{:}{:}	-	-	"Retained CB modes, possibly allPhiL(nDOFL,nDOFL), or PhiL(nDOFL,nDOFM)"
typedef	^	CB_MatArrays	R8Ki   	PhiR	{:}{:}	-	-	"FULL PhiR ( no constraints applied)"
typedef	^	CB_MatArrays	R8Ki   	OmegaL	{:}	-	-	"Eigenvalues of retained CB modes, possibly all (nDOFL or nDOFM)"
#
typedef ^   ElemPropType IntKi   eType	 -	-	-	"Element Type"
typedef ^        ^       ReKi    Length	 -	-	-	"Length of an element"
typedef ^        ^       ReKi    Ixx	 -	-	-	"Moment of inertia of an element"
typedef ^        ^       ReKi    Iyy	 -	-	-	"Moment of inertia of an element"
typedef ^        ^       ReKi    Jzz	 -	-	-	"Moment of inertia of an element"
typedef ^        ^       LOGICAL Shear	 -	-	-	"Use timoshenko (true) E-B (false)"
typedef ^        ^       ReKi    Kappa	 -	-	-	"Shear coefficient"
typedef ^        ^       ReKi    YoungE	 -	-	-	"Young's modulus"
typedef ^        ^       ReKi    ShearG	 -	-	-	"Shear modulus"  N/m^2
# Properties common to all element types:
typedef ^        ^       ReKi    Area    -	-	-	"Area of an element" m^2
typedef ^        ^       ReKi    Rho     -	-	-	"Density"        kg/m^3
typedef ^        ^       ReKi    T0      -	-	-	"Pretension "    N
typedef ^        ^       R8Ki    DirCos	{3}{3}	-	-	"Element direction cosine matrix"
# ============================== Define initialization data (not from glue code) here: ============================================================================================================================================
#--------------------------arrays and variables from the input file ---------------------------------------------------------------------------------------------------------------------------------
typedef	SubDyn/SD	SD_InitType	CHARACTER(1024)	RootName	-	-	-	"SubDyn rootname"
typedef	^	^	ReKi	TP_RefPoint 	{3} 	-	-	"global position of transition piece reference point (could also be defined in SubDyn itself)"
typedef	^	^	ReKi	SubRotateZ	-	-	-	"Rotation angle in degrees about global Z"
typedef	^	^	ReKi	g	-	-	-	"Gravity acceleration"
typedef	^	^	DbKi	DT	-	-	-	"Time step from Glue Code"	seconds
typedef	^	^	INTEGER	NJoints	-	-	-	"Number of joints of the sub structure"
typedef	^	^	INTEGER	NPropSetsX	-	-	-	"Number of extended property sets"
typedef	^	^	INTEGER	NPropSetsB	-	-	-	"Number of property sets for beams"
typedef	^	^	INTEGER	NPropSetsC	-	-	-	"Number of property sets for cables"
typedef	^	^	INTEGER	NPropSetsR	-	-	-	"Number of property sets for rigid links"
typedef	^	^	INTEGER	NCMass	-	-	-	"Number of joints with concentrated mass"
typedef	^	^	INTEGER	NCOSMs	-	-	-	"Number of independent cosine matrices"
typedef	^	^	INTEGER	FEMMod	-	-	-	"FEM switch  element model in the FEM"
typedef	^	^	INTEGER	NDiv	-	-	-	"Number of divisions for each member"
typedef	^	^	LOGICAL	CBMod	-	-	-	"Perform C-B flag"
typedef	^	^	ReKi	Joints	{:}{:}	-	-	"Joints number and coordinate values"
typedef	^	^	ReKi	PropSetsB	{:}{:}	-	-	"Property sets number and values"
typedef	^	^	ReKi	PropSetsC	{:}{:}	-	-	"Property ID and values for cables"
typedef	^	^	ReKi	PropSetsR	{:}{:}	-	-	"Property ID and values for rigid link"
typedef	^	^	ReKi	PropSetsX	{:}{:}	-	-	"Extended property sets"
typedef	^	^	ReKi	COSMs	{:}{:}	-	-	"Independent direction cosine matrices"
typedef	^	^	ReKi	CMass	{:}{:}	-	-	"Concentrated mass information"
typedef	^	^	ReKi	JDampings	{:}	-	-	"Damping coefficients for internal modes"
typedef ^   ^   IntKi   GuyanDampMod  -  -  -  "Guyan damping [0=none, 1=Rayleigh Damping, 2= user specified 6x6 matrix]"
typedef ^   ^   ReKi    RayleighDamp  {2} -  -  "Mass and stiffness proportional damping coefficients (Rayleigh Damping) [only if GuyanDampMod=1]"
typedef ^   ^   ReKi    GuyanDampMat  {6}{6} - - "Guyan Damping Matrix, see also CBB"
typedef	^	^	INTEGER	Members	{:}{:}	-	-	"Member joints connection"
typedef	^	^	CHARACTER(ChanLen)	SSOutList	{:}	-	-	"List of Output Channels"
typedef	^	^	LOGICAL	OutCOSM	-	-	-	"Output Cos-matrices Flag"
typedef	^	^	LOGICAL	TabDelim	-	-	-	"Generate a tab-delimited output file in OutJckF-Flag"
typedef	^	^	R8Ki	SSIK	{:}{:}	-	-	"SSI stiffness packed matrix elements (21 of them), for each reaction joint"
typedef	^	^	R8Ki	SSIM	{:}{:}	-	-	"SSI mass packed matrix elements (21 of them), for each reaction joint"
typedef	^	^	CHARACTER(1024)	SSIfile {:}	-	-	"Soil Structure Interaction (SSI) files to associate with each reaction node"
typedef	^	^	ReKi	Soil_K	{:}{:}{:}	-	-	"Soil stiffness (at passed at Init, not in input file)  6x6xn"
typedef	^	^	ReKi	Soil_Points	{:}{:} 	-	-	"Node positions where soil stiffness will be added"
typedef	^	^	Integer	Soil_Nodes	{:}  	-	-	"Node indices where soil stiffness will be added"
#-------------------------- arrays and variables used in the module ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
typedef	^	^	INTEGER	NElem	-	-	-	"Total number of elements"
typedef	^	^	INTEGER	NPropB  -	-	-	"Total number of property sets for Beams"
typedef	^	^	INTEGER	NPropC 	-	-	-	"Total number of property sets for Cable"
typedef	^	^	INTEGER	NPropR 	-	-	-	"Total number of property sets for Rigid"
typedef	^	^	ReKi	Nodes	{:}{:}	-	-	"Nodes number and coordinates"
typedef	^	^	ReKi	PropsB    	{:}{:}	-	-	"Property sets and values for Beams"
typedef	^	^	ReKi	PropsC    	{:}{:}	-	-	"Property sets and values for Cable"
typedef	^	^	ReKi	PropsR    	{:}{:}	-	-	"Property sets and values for Rigid link"
typedef	^	^	R8Ki	K	{:}{:}	-	-	"System stiffness matrix"
typedef	^	^	R8Ki	M	{:}{:}	-	-	"System mass matrix"
typedef	^	^	R8Ki	FG	{:}	-	-	"Gravity force vector (include initial Cable force T0)"	N
typedef	^	^	ReKi	ElemProps	{:}{:}	-	-	"Element properties(A, L, Ixx, Iyy, Jzz, Shear, Kappa, E, G, Rho, DirCos(1,1), DirCos(2, 1), ....., DirCos(3, 3) )"
typedef	^	^	INTEGER	MemberNodes	{:}{:}	-	-	"Member number and list of nodes making up a member (>2 if subdivided)"
typedef	^	^	INTEGER	NodesConnN	{:}{:}	-	-	"Nodes that connect to a common node"
typedef	^	^	INTEGER	NodesConnE	{:}{:}	-	-	"Elements that connect to a common node"
typedef	^	^	LOGICAL	SSSum	-	-	-	"SubDyn Summary File Flag"

# ============================== States ============================================================================================================================================
# Define continuous (differentiable) states here:
typedef	^	ContinuousStateType	ReKi	qm	{:}	-	-	"Virtual states, Nmod elements"
typedef	^	ContinuousStateType	ReKi	qmdot	{:}	-	-	"Derivative of states, Nmod elements"
# Define discrete (nondifferentiable) states here:
typedef	^	DiscreteStateType	ReKi	DummyDiscState	-	-	-	"Remove this variable if you have discrete states"
# Define constraint states here:
typedef	^	ConstraintStateType	ReKi	DummyConstrState	-	-	-	"Remove this variable if you have constraint states"

# Define any other states, including integer or logical states here:
typedef	SubDyn/SD	OtherStateType	SD_ContinuousStateType	 xdot       {:} -  -  "previous state derivs for m-step time integrator"
typedef	^	          ^             IntKi                    n           -  -  -  "tracks time step for which OtherState was updated last"


# ..... Misc/Optimization variables.................................................................................................
# Define any data that are used only for efficiency purposes (these variables are not associated with time):
#   e.g. indices for searching in an array, large arrays that are local variables in any routine called multiple times, etc.
typedef  ^           MiscVarType    ReKi                     qmdotdot      {:}  -  -  "2nd Derivative of states, used only for output-file purposes"
typedef  ^            ^             ReKi                     u_TP           6   -  -  
typedef  ^            ^             ReKi                     udot_TP        6   -  -  
typedef  ^            ^             ReKi                     udotdot_TP     6   -  -  
typedef  ^            ^             ReKi                     UFL           {:}  -  -  
typedef  ^            ^             ReKi                     UR_bar        {:}  -  -  
typedef  ^            ^             ReKi                     UR_bar_dot    {:}  -  -  
typedef  ^            ^             ReKi                     UR_bar_dotdot {:}  -  -  
typedef  ^            ^             ReKi                     UL            {:}  -  -  
typedef  ^            ^             ReKi                     UL_dot        {:}  -  -  
typedef  ^            ^             ReKi                     UL_dotdot     {:}  -  -  
typedef  ^            ^             ReKi                     DU_full       {:}  -  -  "Delta U used for extra moment" 
typedef  ^            ^             ReKi                     U_full        {:}  -  -  
typedef  ^            ^             ReKi                     U_full_dot    {:}  -  -  
typedef  ^            ^             ReKi                     U_full_dotdot {:}  -  -  
typedef  ^            ^             ReKi                     U_red          {:}  -  -  
typedef  ^            ^             ReKi                     U_red_dot      {:}  -  -  
typedef  ^            ^             ReKi                     U_red_dotdot   {:}  -  -  
typedef  ^            ^             ReKi                     FC_unit   {:}   -  -   "Cable Force vector (for varying cable load, of unit cable load)"	N
### data for writing to an output file (this data is associated with time, but saved/written in CalcOutput so not stored as an other state) ###
typedef  ^            ^             ReKi                     SDWrOutput {:} -  -  "Data from previous step to be written to a SubDyn output file"
typedef  ^            ^             DbKi                     LastOutTime -  -  -  "The time of the most recent stored output data"	"s"
typedef  ^            ^             IntKi                    Decimat     -  -  -  "Current output decimation counter"	"-"
typedef  ^            ^             ReKi                     Fext      {:} -  -  "External loads on unconstrained DOFs"	"-"
typedef  ^            ^             ReKi                     Fext_red  {:} -  -  "External loads on constrained DOFs, Fext_red= T^t Fext"	"-"



# ============================== Parameters ============================================================================================================================================
# --- Algo
typedef	^	ParameterType	DbKi	SDDeltaT	-	-	-	"Time step (for integration of continuous states)"	seconds
typedef	^	ParameterType	IntKi	IntMethod	-	-	-	"INtegration Method (1/2/3)Length of y2 array"
# --- FEM
typedef	^	ParameterType	INTEGER	nDOF	    -	-	-	"Total degree of freedom"
typedef	^	ParameterType	INTEGER	nDOF_red	-	-	-	"Total degree of freedom after constraint reduction"
typedef	^	ParameterType	IntKi	Nmembers	-	-	-	"Number of members of the sub structure"
typedef	^	ParameterType	IntKi	Elems	{:}{:}	-	-	"Element nodes connections"
typedef	^	ParameterType	ElemPropType	ElemProps	{:}	-	-	"List of element properties"
typedef ^   ^               R8Ki            FG_full     {:}	-	-	"Gravity force vector (with initial cable force T0), not reduced"	N
# --- Constraints reduction
typedef ^             ^     Logical reduced           -      -  -  "True if system has been reduced to account for constraints"  "-"
typedef ^             ^     R8Ki    T_red             {:}{:} -  -  "Transformation matrix performing the constraint reduction x = T. xtilde"	"-"
typedef ^             ^     R8Ki    T_red_T           {:}{:} -  -  "Transpose of T_red"	"-"
typedef ^             ^     IList   NodesDOF          {:}    -  -  "DOF indices of each nodes in unconstrained assembled system "	"-"
typedef ^             ^     IList   NodesDOFred       {:}    -  -  "DOF indices of each nodes in constrained assembled system "	"-"
typedef ^             ^     IntKi   ElemsDOF          {:}{:} -  -  "12 DOF indices of node 1 and 2 of a given member in unconstrained assembled system "	"-"
typedef ^             ^     IntKi   DOFred2Nodes      {:}{:} -  -  "nDOFRed x 3, for each constrained DOF, col1 node index, col2 number of DOF, col3 DOF starting from 1"	"-"
# --- Control
typedef  ^            ^     IntKi   CtrlElem2Channel  {:}{:} - -   "nCtrlCable x 2, for each CtrlCable, Elem index, and Channel Index"
# --- CB reduction
typedef	^	ParameterType	IntKi	nDOFM	-	-	-	"retained degrees of freedom (modes)"
typedef	^	ParameterType	IntKi  	SttcSolve	-	-	-	"Solve dynamics about static equilibrium point (flag)"
typedef	^	ParameterType	Logical ExtraMoment	-	-	-	"Add Extra lever arm contribution to interface reaction outputs"
typedef	^	ParameterType	Logical FixedBottom	-	-	-	"True if Fixed bottom"
typedef	^	ParameterType	ReKi	KMMDiag	{:}	-	-	"Diagonal coefficients of Kmm (OmegaM squared)"
typedef	^	ParameterType	ReKi	CMMDiag	{:}	-	-	"Diagonal coefficients of Cmm (~2 Zeta OmegaM))"
typedef	^	ParameterType	ReKi	MMB	{:}{:}	-	-	"Matrix after C-B reduction (transpose of MBM"
typedef	^	ParameterType	ReKi	FX	{:}	-	-	"Load components in X"
typedef	^	ParameterType	ReKi	C1_11	{:}{:}	-	-	"Coefficient of x in Y1"
typedef	^	ParameterType	ReKi	C1_12	{:}{:}	-	-	"Coefficient of x in Y1"
typedef	^	ParameterType	ReKi	D1_12	{:}{:}	-	-	"Coefficient of uTPdot in Y1"
typedef	^	ParameterType	ReKi	D1_13	{:}{:}	-	-	"Coefficient of uTPdotdot in Y1"
typedef	^	ParameterType	ReKi	D1_14	{:}{:}	-	-	"Coefficient of Fle in Y1"
typedef	^	ParameterType	ReKi	FY	{:}	-	-	"Load Components in  Y1"
typedef	^	ParameterType	ReKi	PhiM	{:}{:}	-	-	"Coefficient of x in Y2"
typedef	^	ParameterType	ReKi	C2_61	{:}{:}	-	-	"Coefficient of x in Y2 (URdotdot ULdotdot)"
typedef	^	ParameterType	ReKi	C2_62	{:}{:}	-	-	"Coefficient of x in Y2 (URdotdot ULdotdot)"
typedef	^	ParameterType	ReKi	PhiRb_TI	{:}{:}	-	-	"Coefficient of u in Y2 (Phi_R bar * TI)"
typedef	^	ParameterType	ReKi	D2_63	{:}{:}	-	-	"Coefficient of u in Y2 (URdotdot ULdotdot)"
typedef	^	ParameterType	ReKi	D2_64	{:}{:}	-	-	"Coefficient of u in Y2 (URdotdot ULdotdot)"
typedef	^	ParameterType	ReKi	F2_61	{:}	-	-	"Load Component in Y2"
typedef	^	ParameterType	ReKi	MBB	{:}{:}	-	-	"Guyan Mass Matrix after C-B reduction"
typedef	^	ParameterType	ReKi	KBB	{:}{:}	-	-	"Guyan Stiffness Matrix after C-B reduction"
typedef	^	ParameterType	ReKi	CBB	{:}{:}	-	-	"Guyan Damping Matrix after C-B reduction"
typedef	^	ParameterType	ReKi	CMB	{:}{:}	-	-	"Cross coupling Guyan-CB damping matrix"
typedef	^	ParameterType	ReKi	CBM	{:}{:}	-	-	"Cross coupling Guyan-CB damping matrix"
typedef	^	ParameterType	ReKi	CMM	{:}{:}	-	-	"CB damping matrix"
typedef	^	ParameterType	ReKi	MBM	{:}{:}	-	-	"Matrix after C-B reduction"
typedef ^   ParameterType   ReKi    UL_st_g   {:}  -   -   "Motion of internal DOFs due to static gravitational force, for static improvement"
typedef	^	ParameterType	ReKi	PhiL_T	{:}{:}	-	-	"Transpose of Matrix of C-B  modes"
typedef	^	ParameterType	ReKi	PhiLInvOmgL2	{:}{:}	-	-	"Matrix of C-B  modes times the inverse of OmegaL**2 (Phi_L*(Omg**2)^-1)"
typedef	^	ParameterType	ReKi	KLLm1	{:}{:}	-	-	"KLL^{-1}, inverse of matrix KLL, for static solve only"
typedef	^	ParameterType	ReKi	AM2Jac	{:}{:}	-	-	"Jacobian (factored) for Adams-Boulton 2nd order Integration"
typedef	^	ParameterType	IntKi	AM2JacPiv	{:}	-	-	"Pivot array for Jacobian factorization (for Adams-Boulton 2nd order Integration)"
typedef	^	ParameterType	ReKi	TI	{:}{:}	-	-	"Matrix to calculate TP reference point reaction at top of structure"
typedef	^	ParameterType	ReKi	TIreact	{:}{:}	-	-	"Matrix to calculate single point reaction at base of structure"
# --- Partitioning I L C Y, R=[C I]
typedef	^	ParameterType	IntKi	nNodes   	-	-	-	"Total number of nodes"
typedef	^	ParameterType	IntKi	nNodes_I	-	-	-	"Number of Interface nodes"
typedef	^	ParameterType	IntKi	nNodes_L	-	-	-	"Number of Internal nodes"
typedef	^	ParameterType	IntKi	nNodes_C	-	-	-	"Number of joints with reactions"
typedef	^	ParameterType	IntKi	Nodes_I	{:}{:}	-	-	"Interface degree of freedoms"
typedef	^	ParameterType	IntKi	Nodes_L	{:}{:}	-	-	"Internal nodes (not interface nor reaction)"
typedef	^	ParameterType	IntKi	Nodes_C	{:}{:}	-	-	"React degree of freedoms"
typedef	^	ParameterType	IntKi	nDOFI__	-	-	-	"Size of IDI__"
typedef	^	ParameterType	IntKi	nDOFI_Rb -	-	-	"Size of IDI_Rb"
typedef	^	ParameterType	IntKi	nDOFI_F	-	-	-	"Size of IDI_F"
typedef	^	ParameterType	IntKi	nDOFL_L	-	-	-	"Size of IDL_L"
typedef	^	ParameterType	IntKi	nDOFC__	-	-	-	"Size of IDC__"
typedef	^	ParameterType	IntKi	nDOFC_Rb -	-	-	"Size of IDC_Rb"
typedef	^	ParameterType	IntKi	nDOFC_L	-	-	-	"Size of IDC_L"
typedef	^	ParameterType	IntKi	nDOFC_F	-	-	-	"Size of IDC_F"
typedef	^	ParameterType	IntKi	nDOFR__	-	-	-	"Size of IDR__"
typedef	^	ParameterType	IntKi	nDOF__Rb -	-	-	"Size of ID__Rb"
typedef	^	ParameterType	IntKi	nDOF__L	-	-	-	"Size of ID__L"
typedef	^	ParameterType	IntKi	nDOF__F	-	-	-	"Size of ID__F"
typedef	^	ParameterType	IntKi	IDI__	{:}	-	-	"Index of all Interface DOFs"
typedef	^	ParameterType	IntKi	IDI_Rb	{:}	-	-	"Index array of the interface (nodes connect to TP) dofs that are retained/master/follower DOFs"
typedef	^	ParameterType	IntKi	IDI_F	{:}	-	-	"Index array of the interface (nodes connect to TP) dofs that are fixed DOF"
typedef	^	ParameterType	IntKi	IDL_L	{:}	-	-	"Index array of the internal dofs coming from internal nodes"
typedef	^	ParameterType	IntKi	IDC__	{:}	-	-	"Index of all bottom DOF"
typedef	^	ParameterType	IntKi	IDC_Rb	{:}	-	-	"Index array of the contraint dofs that are retained/master/follower DOF"
typedef	^	ParameterType	IntKi	IDC_L	{:}	-	-	"Index array of the contraint dofs that are follower/internal DOF"
typedef	^	ParameterType	IntKi	IDC_F	{:}	-	-	"Index array of the contraint dofs that are fixd DOF"
typedef	^	ParameterType	IntKi	IDR__	{:}	-	-	"Index array of the interface and restraint dofs"
typedef	^	ParameterType	IntKi	ID__Rb	{:}	-	-	"Index array of all the retained/leader/master dofs (from any nodes of the structure)"
typedef	^	ParameterType	IntKi	ID__L	{:}	-	-	"Index array of all the follower/internal dofs (from any nodes of the structure)"
typedef	^	ParameterType	IntKi	ID__F	{:}	-	-	"Index array of the DOF that are fixed (from any nodes of the structure)"
typedef	^	ParameterType	ReKi	FGL	{:}	-	-	"Internal node nDOFL, gravity loads"
# --- Outputs
typedef	^	ParameterType	IntKi	NMOutputs	-	- 	-	"Number of members whose output is written"
typedef	^	ParameterType	IntKi	NumOuts	-	-	-	"Number of output channels read from input file"
typedef	^	ParameterType	IntKi	OutSwtch	-	-	-	"Output Requested Channels to local or global output file [1/2/3]"
typedef	^	ParameterType	IntKi	UnJckF	-	-	-	"Unit of SD ouput file"
typedef	^	ParameterType	CHARACTER(1)	Delim	-	-	-	"Column delimiter for output text files"
typedef	^	ParameterType	CHARACTER(20)	OutFmt	-	-	-	"Format for Output"
typedef	^	ParameterType	CHARACTER(20)	OutSFmt	-	-	-	"Format for Output Headers"
typedef	^	ParameterType	MeshAuxDataType	MoutLst	{:}	-	-	"List of user requested members and nodes"
typedef	^	ParameterType	MeshAuxDataType	MoutLst2	{:}	-	-	"List of all member joint nodes and elements for output"
typedef	^	ParameterType	MeshAuxDataType	MoutLst3	{:}	-	-	"List of all member joint nodes and elements for output"
typedef	^	ParameterType	OutParmType	OutParam	{:}	-	-	"An array holding names, units, and indices of all of the selected output channels. # logical"
typedef	^	ParameterType	LOGICAL	OutAll	-	-	-	"Flag to output or not all joint forces"
typedef	^	ParameterType	LOGICAL	OutReact	-	-	-	"Flag to check whether reactions are requested"
typedef	^	ParameterType	IntKi	OutAllInt	-	-	-	"Integer version of OutAll"
typedef	^	ParameterType	IntKi	OutAllDims	-	-	-	"Integer version of OutAll"
typedef	^	ParameterType	IntKi	OutDec	-	-	-	"Output Decimation for Requested Channels"
# --- Linearization
typedef ^   ParameterType   Integer Jac_u_indx       {:}{:}   - - "matrix to help fill/pack the u vector in computing the jacobian" -
typedef ^   ParameterType   R8Ki    du               {:}      - - "vector that determines size of perturbation for u (inputs)"
typedef ^   ParameterType   R8Ki    dx               {2}      - - "vector that determines size of perturbation for x (continuous states)"
typedef ^   ParameterType   Integer Jac_ny            -       - - "number of outputs in jacobian matrix" -
typedef ^   ParameterType   Integer Jac_nx            -       - - "half the number of continuous states in jacobian matrix" -
typedef ^   ParameterType   logical RotStates         -       - - "Orient states in rotating frame during linearization? (flag)" -

# ============================== Inputs ============================================================================================================================================
typedef ^   InputType   MeshType    TPMesh   -   -   -   "Transition piece inputs on a point mesh"
typedef ^   InputType   MeshType    LMesh    -   -   -   "Point mesh for interior node inputs"
typedef ^   InputType   ReKi        CableDeltaL   {:}  -   -   "Cable tension, control input"

# ============================== Outputs ============================================================================================================================================
typedef	^	OutputType	MeshType	Y1Mesh	-	-	-	"Transition piece outputs on a point mesh"
typedef	^	OutputType	MeshType	Y2Mesh	-	-	-	"Interior+Interface nodes outputs on a point mesh"
typedef	^	OutputType	ReKi	WriteOutput	{:}	-	-	"Data to be written to an output file"
