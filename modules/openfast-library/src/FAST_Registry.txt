###################################################################################################################################
# Registry for FAST v8 in the FAST Modularization Framework
# This Registry file is used to create FAST_Types which contains data used in the FAST glue code.
# It also contains copy, destroy, pack, and unpack routines associated with each defined data types.
# See the NWTC Programmer's Handbook for further information on the format/contents of this file.
#
# Entries are of the form
# <keyword>	<ModuleName/ModName>	<TypeName>	<FieldType>	<FieldName>	<Dims>	<IO>	<DNAME>	<DESCRIP>	<UNITS>
#
# Use ^ as a shortcut for the value in the same column from the previous line.
###################################################################################################################################
# ...... Include files (definitions from NWTC Library and module components) ............................................................................
include	Registry_NWTC_Library.txt
usefrom Glue_Registry.txt
usefrom	ElastoDyn_Registry.txt
usefrom	SED_Registry.txt
usefrom	Registry_BeamDyn.txt
usefrom	ServoDyn_Registry.txt
usefrom	AeroDyn_Registry.txt
usefrom	AeroDisk_Registry.txt
usefrom ExtLoads_Registry.txt
usefrom	SubDyn_Registry.txt
usefrom	SeaState.txt
usefrom	HydroDyn.txt
usefrom	IceFloe_FASTRegistry.inp
usefrom	InflowWind.txt
usefrom	ExternalInflow_Registry.txt
usefrom	Registry_IceDyn.txt
usefrom	FEAM_Registry.txt
usefrom	MAP_Registry.txt
usefrom	MoorDyn_Registry.txt
usefrom	OrcaFlexInterface.txt
usefrom	ExtPtfm_MCKF_Registry.txt

# ...... Constants ............................................................................

# MODULE IDENTIFIERS:
# NOTE WELL: The order of these modules is the order they get written to the output file;
# Make sure the module identifiers start at 1 and that this order matches the orders in WrOutputLine and FAST_InitOutput!!!
param	FAST	-	INTEGER	Module_Unknown	-	-1	-	"Unknown"	-
param	^	-	INTEGER	Module_None	-	0	-	"No module selected"	-
param	^	-	INTEGER	Module_Glue	-	1	-	"Glue code"	-
param	^	-	INTEGER	Module_IfW	-	2	-	"InflowWind"	-
param	^	-	INTEGER	Module_ExtInfw	-	3	-	"ExternalInflow"	-
param	^	-	INTEGER	Module_ED	-	4	-	"ElastoDyn"	-
param	^	-	INTEGER	Module_BD	-	5	-	"BeamDyn"	-
param	^	-	INTEGER	Module_AD	-	7	-	"AeroDyn"	-
param	^	-	INTEGER	Module_ExtLd	-	8	-	"ExternalLoads"	-
param	^	-	INTEGER	Module_SrvD	-	9	-	"ServoDyn"	-
param	^	-	INTEGER	Module_SeaSt -	10	-	"SeaState"	-
param	^	-	INTEGER	Module_HD	-	11	-	"HydroDyn"	-
param	^	-	INTEGER	Module_SD	-	12	-	"SubDyn"	-
param	^	-	INTEGER	Module_ExtPtfm	-	13	-	"External Platform Loading MCKF"	-
param	^	-	INTEGER	Module_MAP	-	14	-	"MAP (Mooring Analysis Program)"	-
param	^	-	INTEGER	Module_FEAM	-	15	-	"FEAMooring"	-
param	^	-	INTEGER	Module_MD	-	16	-	"MoorDyn"	-
param	^	-	INTEGER	Module_Orca	-	17	-	"OrcaFlex integration (HD/Mooring)"	-
param	^	-	INTEGER	Module_IceF	-	18	-	"IceFloe"	-
param	^	-	INTEGER	Module_IceD	-	19	-	"IceDyn"	-
param	^	-	INTEGER	Module_ADsk	-	20	-	"AeroDisk"	-
param	^	-	INTEGER	Module_SED 	-	21	-	"Simplified-ElastoDyn" -
param	^	-	INTEGER	NumModules	-	21	-	"The number of modules available in FAST"	-
# Other Constants
param	^	-	INTEGER	MaxBladesBD	-	3	-	"Maximum number of blades allowed on a turbine"	-
param	^	-	INTEGER	IceD_MaxLegs	-	4	-	"because I don't know how many legs there are before calling IceD_Init and I don't want to copy the data because of sibling mesh issues, I'm going to allocate IceD based on this number"	-
# Constants for steady-state solve (indices for output channels)
param	^	-	INTEGER	SS_Indx_Pitch	-	1	-	"pitch"	-
param	^	-	INTEGER	SS_Indx_TSR	-	2	-	"TSR"	-
param	^	-	INTEGER	SS_Indx_WS	-	3 -	"wind speed"	-
param	^	-	INTEGER	SS_Indx_RotSpeed	-	4	-	"rotor speed"	-
param	^	-	INTEGER	SS_Indx_Err	-	5	-	"err in the ss solve"	-
param	^	-	INTEGER	SS_Indx_Iter	-	6	-	"number of iterations"	-
# Size of state derived type arrays
param	^	-	INTEGER	NumStateTimes	-	4	-	"size of arrays of state derived types (Continuous state type etc). (STATE_CURR, STATE_PRED, STATE_SAVED_CURR, STATE_SAVED_PRED)"	-

# ...... Data for VTK surface visualization ............................................................................
typedef	^	FAST_VTK_BLSurfaceType	SiKi	AirfoilCoords	{:}{:}{:}	-	-	"x,y coordinates for airfoil around each blade node on a blade (relative to reference)"	-
# ...... Data for VTK surface visualization ............................................................................
typedef	^	FAST_VTK_SurfaceType	IntKi	NumSectors	-	-	-	"number of sectors in which to split circles (higher number gives smoother surface)"	-
typedef	^	FAST_VTK_SurfaceType	SiKi	HubRad	-	-	-	"Preconed hub radius (distance from the rotor apex to the blade root)"	m
typedef	^	FAST_VTK_SurfaceType	SiKi	GroundRad	-	-	-	"radius for plotting circle on ground"	m
typedef	^	FAST_VTK_SurfaceType	SiKi	NacelleBox	{3}{8}	-	-	"X-Y-Z locations of 8 points that define the nacelle box, relative to the nacelle position"	m
typedef	^	FAST_VTK_SurfaceType	SiKi	TowerRad	{:}	-	-	"radius of each ED tower node"	m
typedef	^	FAST_VTK_SurfaceType	IntKi	NWaveElevPts	{2}	-	-	"number of points for wave elevation visualization"	-
typedef	^	FAST_VTK_SurfaceType	SiKi	WaveElevVisX	{:}	-	-	"X locations for WaveElev output (for visualization)."	"m,-"
typedef	^	FAST_VTK_SurfaceType	SiKi	WaveElevVisY	{:}	-	-	"Y locations for WaveElev output (for visualization)."	"m,-"
typedef	^	FAST_VTK_SurfaceType	SiKi	WaveElevVisGrid	{:}{:}{:}	-	-	"wave elevation at WaveElevVis{XY}; first dimension is time step; second/third dimensions are grid of elevations"	"m,-"
typedef	^	FAST_VTK_SurfaceType	FAST_VTK_BLSurfaceType	BladeShape	{:}	-	-	"AirfoilCoords for each blade"	m
typedef	^	FAST_VTK_SurfaceType	SiKi	MorisonVisRad	{:}	-	-	"radius of each Morison node"	m


typedef   ^   FAST_VTK_ModeShapeType   CHARACTER(1024)  CheckpointRoot -   -  -  "name of the checkpoint file written by FAST when linearization data was produced"
typedef   ^   FAST_VTK_ModeShapeType   CHARACTER(1024)  DataFileName -   -  -  "name of the file with eigenvectors written by Matlab"
typedef   ^   FAST_VTK_ModeShapeType   IntKi    VTKLinModes         -      -  -  "Number of modes to visualize" -
typedef   ^   FAST_VTK_ModeShapeType   IntKi    VTKModes          {:}      -  -  "Which modes to visualize" -
typedef   ^   FAST_VTK_ModeShapeType   IntKi    VTKLinTim           -      -  -  "Switch to make one animation for all LinTimes together (1) or separate animations for each LinTimes(2)" -
typedef   ^   FAST_VTK_ModeShapeType   IntKi    VTKNLinTimes        -      -  -  "number of linearization times to use when VTKLinTim==2" -
typedef   ^   FAST_VTK_ModeShapeType   ReKi     VTKLinScale         -      -  -  "Mode shape visualization scaling factor" -
typedef   ^   FAST_VTK_ModeShapeType   ReKi     VTKLinPhase         -      -  -  "Phase when making one animation for all LinTimes together (used only when VTKLinTim=1)" -
typedef   ^   FAST_VTK_ModeShapeType   R8Ki     DampingRatio    {:}        -  -  "damping ratios from mbc3 analysis" -
typedef   ^   FAST_VTK_ModeShapeType   R8Ki     NaturalFreq_Hz  {:}        -  -  "natural frequency from mbc3 analysis" -
typedef   ^   FAST_VTK_ModeShapeType   R8Ki     DampedFreq_Hz   {:}        -  -  "damped frequency from mbc3 analysis" -
typedef   ^   FAST_VTK_ModeShapeType   R8Ki     x_eig_magnitude {:}{:}{:}  -  -  "magnitude of eigenvector (dimension 1=state, dim 2= azimuth, dim 3 = mode)" -
typedef   ^   FAST_VTK_ModeShapeType   R8Ki     x_eig_phase     {:}{:}{:}  -  -  "phase of eigenvector (dimension 1=state, dim 2= azimuth, dim 3 = mode)" -

# ..... FAST_ParameterType data .......................................................................................................
# Misc data for coupling:
typedef	FAST	FAST_ParameterType	DbKi	DT	-	-	-	"Integration time step [global time]"	s
typedef	^	FAST_ParameterType	INTEGER	n_TMax_m1	-	-	-	"The time step of TMax - dt (the end time of the simulation)"	(-)
typedef	^	FAST_ParameterType	DbKi	TMax	-	-	-	"Total run time"	s
typedef	^	FAST_ParameterType	IntKi	InterpOrder	-	-	-	"Interpolation order {0,1,2}"	-
typedef	^	FAST_ParameterType	IntKi	NumCrctn	-	-	-	"Number of correction iterations"	-
typedef	^	FAST_ParameterType	IntKi	KMax	-	-	-	"Maximum number of input-output-solve or nonlinear solve residual equation iterations (KMax >= 1) [>0]"	-
typedef	^	FAST_ParameterType	IntKi	numIceLegs	-	-	-	"number of suport-structure legs in contact with ice (IceDyn coupling)"	-
typedef	^	FAST_ParameterType	IntKi	RotNumBld	:	-	-	"number of blades in each rotor"	-
typedef	^	FAST_ParameterType	logical	RotMirror	:	-	-	"Array of flags indicating if rotor rotation should be mirrored (true=mirror)"	-
typedef	^	FAST_ParameterType	IntKi	NumBD	-	-	-	"number of BeamDyn instances"	-
typedef	^	FAST_ParameterType	IntKi	BDRotMap	:	-	-	"array mapping BeamDyn instance to rotor number"	-
typedef	^	FAST_ParameterType	IntKi	BDBldMap	:	-	-	"array mapping BeamDyn instance to blade number"	-
typedef	^	FAST_ParameterType	LOGICAL	BD_OutputSibling	-	-	-	"flag to determine if BD input is sibling of output mesh"	-
# Data for TC Solver:
typedef	^	FAST_ParameterType	DbKi	RhoInf	-	-	-	"Numerical damping parameter for tight coupling generalized-alpha integrator (-) [0.0 to 1.0]"	-
typedef	^	FAST_ParameterType	DbKi	ConvTol	-	-	-	"Convergence iteration error tolerance for tight coupling generalized alpha integrator (-)"	-
typedef	^	FAST_ParameterType	IntKi	MaxConvIter	-	-	-	"Maximum number of convergence iterations for tight coupling generalized alpha integrator (-)"	-
# Data for Jacobians:
typedef	^	FAST_ParameterType	DbKi	DT_Ujac	-	-	-	"Time between when we need to re-calculate these Jacobians"	s
typedef	^	FAST_ParameterType	Reki	UJacSclFact	-	-	-	"Scaling factor used to get similar magnitudes between accelerations, forces, and moments in Jacobians"	-
typedef	^	FAST_ParameterType	IntKi	SizeJac_Opt1	{9}	-	-	"(1)=size of matrix; (2)=size of ED portion; (3)=size of SD portion [2 meshes]; (4)=size of HD portion; (5)=size of BD portion blade 1; (6)=size of BD portion blade 2; (7)=size of BD portion blade 3; (8)=size of Orca portion; (9)=size of ExtPtfm portion;"	-
typedef	^	FAST_ParameterType	IntKi	SolveOption	-	-	-	"Switch to determine which solve option we are going to use (see Solve_FullOpt1, etc)"	-
# Feature switches and flags:
typedef	^	FAST_ParameterType	IntKi	NRotors	-	-	-	"Number of rotors in turbine"	-
typedef	^	FAST_ParameterType	IntKi	CompElast	-	-	-	"Compute blade loads (switch) {Module_ED; Module_BD; Module_SED}"	-
typedef	^	FAST_ParameterType	IntKi	CompInflow	-	-	-	"Compute inflow wind conditions (switch) {Module_None; Module_IfW; Module_ExtInfw}"	-
typedef	^	FAST_ParameterType	IntKi	CompAero	-	-	-	"Compute aerodynamic loads (switch) {Module_None; Module_ADsk; Module_AD}"	-
typedef	^	FAST_ParameterType	IntKi	CompServo	-	-	-	"Compute control and electrical-drive dynamics (switch) {Module_None; Module_SrvD}"	-
typedef	^	FAST_ParameterType	IntKi	CompSeaSt   -	-	-	"Compute sea states; wave kinematics (switch) {Module_None; Module_SeaSt}"	-
typedef	^	FAST_ParameterType	IntKi	CompHydro	-	-	-	"Compute hydrodynamic loads (switch) {Module_None; Module_HD}"	-
typedef	^	FAST_ParameterType	IntKi	CompSub	-	-	-	"Compute sub-structural dynamics (switch) {Module_None; Module_SD, Module_ExtPtfm}"	-
typedef	^	FAST_ParameterType	IntKi	CompMooring	-	-	-	"Compute mooring system (switch) {Module_None; Module_MAP; Module_FEAM; Module_MD; Module_Orca}"	-
typedef	^	FAST_ParameterType	IntKi	CompIce	-	-	-	"Compute ice loading (switch) {Module_None; Module_IceF, Module_IceD}"	-
typedef	^	FAST_ParameterType	IntKi	MHK	        -	-	-	"MHK turbine type (switch) {0=Not an MHK turbine; 1=Fixed MHK turbine; 2=Floating MHK turbine}"	-
typedef	^	FAST_ParameterType	LOGICAL	UseDWM	-	-	-	"Use the DWM module in AeroDyn"	-
typedef	^	FAST_ParameterType	LOGICAL	Linearize	-	-	-	"Linearization analysis (flag)"	-
typedef ^   FAST_ParameterType  IntKi   WaveFieldMod -  -   -   "Wave field handling (-) (switch) 0: use individual HydroDyn inputs without adjustment, 1: adjust wave phases based on turbine offsets from farm origin"   -
typedef	^	FAST_ParameterType	logical	FarmIntegration	-	.false.	-	"whether this is called from FAST.Farm (or another program that doesn't want FAST to call all of the init stuff first)"	-
typedef	^	FAST_ParameterType	SiKi	TurbinePos	{3}	-	-	"Initial position of turbine base (origin used for graphics)"	m
# Environmental conditions:
typedef ^   FAST_ParameterType  ReKi    Gravity	    -	-	-	"Gravitational acceleration" m/s^2
typedef ^   FAST_ParameterType  ReKi    AirDens     -   -   -   "Air density" kg/m^3
typedef ^   FAST_ParameterType  ReKi    WtrDens     -   -   -   "Water density" kg/m^3
typedef ^   FAST_ParameterType  ReKi    KinVisc     -   -   -   "Kinematic viscosity of working fluid" m^2/s
typedef ^   FAST_ParameterType  ReKi    SpdSound    -   -   -   "Speed of sound in working fluid" m/s
typedef ^   FAST_ParameterType  ReKi    Patm        -   -   -   "Atmospheric pressure" Pa
typedef ^   FAST_ParameterType  ReKi    Pvap        -   -   -   "Vapour pressure of working fluid" Pa
typedef ^   FAST_ParameterType  ReKi    WtrDpth     -   -   -   "Water depth" m
typedef ^   FAST_ParameterType  ReKi    MSL2SWL     -   -   -   "Offset between still-water level and mean sea level" m
# Input file names:
typedef	^	FAST_ParameterType	CHARACTER(1024)	EDFile	:	-	-	"ElastoDyn/Simplified-ElastoDyn input file paths (NRotors)"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	BDBldFile	::	-	-	"BeamDyn input file paths for each blade (MaxBladesBD,NRotors)"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	ServoFile	:	-	-	"Turbine control and electrical-drive input file paths (NRotors)"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	InflowFile	-	-	-	"Inflow wind input file path"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	AeroFile	-	-	-	"Aerodynamic input file path"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	SeaStFile   -	-	-	"Sea state input file path"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	HydroFile	-	-	-	"Hydrodynamic input file path"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	SubFile	-	-	-	"sub-structural input file path"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	MooringFile	-	-	-	"mooring system input file path"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	IceFile	-	-	-	"ice loading input file path"	-
#  Parameters for file/screen output
#typedef	^	FAST_ParameterType	DbKi	SttsTime	-	-	-	"Amount of time between screen status messages"	s
typedef	^	FAST_ParameterType	DbKi	TStart	-	-	-	"Time to begin tabular output"	s
typedef	^	FAST_ParameterType	DbKi	DT_Out	-	-	-	"Time step for tabular output"	s
typedef	^	FAST_ParameterType	LOGICAL	WrSttsTime	-	-	-	"Whether we should write the status times to the screen"	-
typedef	^	FAST_ParameterType	INTEGER	n_SttsTime	-	-	-	"Number of time steps between screen status messages"	-
typedef	^	FAST_ParameterType	INTEGER	n_ChkptTime	-	-	-	"Number of time steps between writing checkpoint files"	-
typedef	^	FAST_ParameterType	INTEGER	n_DT_Out	-	-	-	"Number of time steps between writing a line in the time-marching output files"	-
typedef	^	FAST_ParameterType	INTEGER	n_VTKTime	-	-	-	"Number of time steps between writing VTK files"	-
typedef	^	FAST_ParameterType	LOGICAL	WrBinOutFile	-	-	-	"Write a binary output file? (.outb)"	-
typedef	^	FAST_ParameterType	LOGICAL	WrTxtOutFile	-	-	-	"Write a text (formatted) output file? (.out)"	-
typedef	^	FAST_ParameterType	IntKi	WrBinMod	-	-	-	"If writing binary, which file format is to be written [1, 2, or 3]"	-
typedef	^	FAST_ParameterType	LOGICAL	SumPrint	-	-	-	"Print summary data to file? (.sum)"	-
typedef	^	FAST_ParameterType	INTEGER	WrVTK	-	0	-	"VTK Visualization data output: (switch) {0=none; 1=initialization data only; 2=animation}"	-
typedef	^	FAST_ParameterType	INTEGER	VTK_Type	-	-	-	"Type of  VTK visualization data: (switch) {1=surfaces; 2=basic meshes (lines/points); 3=all meshes (debug)}"	-
typedef	^	FAST_ParameterType	LOGICAL	VTK_fields	-	-	-	"Write mesh fields to VTK data files? (flag) {true/false}"	-
typedef	^	FAST_ParameterType	CHARACTER(1)	Delim	-	-	-	"Delimiter between columns of text output file (.out): space or tab"	-
typedef	^	FAST_ParameterType	CHARACTER(20)	OutFmt	-	-	-	"Format used for text tabular output (except time); resulting field should be 10 characters"	-
typedef	^	FAST_ParameterType	CHARACTER(20)	OutFmt_t	-	-	-	"Format used for time channel in text tabular output; resulting field should be 10 characters"	-
typedef	^	FAST_ParameterType	IntKi	FmtWidth	-	-	-	"width of the time OutFmt specifier"	-
typedef	^	FAST_ParameterType	IntKi	TChanLen	-	-	-	"width of the time channel"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	OutFileRoot	-	-	-	"The rootname of the output files"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	FTitle	-	-	-	"The description line from the FAST (glue-code) input file"	-
typedef	^	FAST_ParameterType	CHARACTER(1024)	VTK_OutFileRoot	-	"''"	-	"The rootname of the VTK output files"	-
typedef	^	FAST_ParameterType	INTEGER	VTK_tWidth	-	-	-	"Width of number of files for leading zeros in file name format"	-
typedef	^	FAST_ParameterType	DbKi	VTK_fps	-	-	-	"number of frames per second to output VTK data" -
typedef	^	FAST_ParameterType	FAST_VTK_SurfaceType	VTK_surface	-	-	-	"Data for VTK surface visualization"
typedef	^	FAST_ParameterType	CHARACTER(4)	Tdesc	-	-	-	"description of turbine ID (for FAST.Farm) screen printing"	
typedef	^	FAST_ParameterType	DbKi	PlatformPosInit	{6}	-	-	"Platform inital 6 DOF position from ED (this is different from TurbinePos)"	-

#  Parameters for linearization
typedef	^	FAST_ParameterType	LOGICAL	CalcSteady	-	-	-	"Calculate a steady-state periodic operating point before linearization [unused if Linearize=False]"	-
typedef	^	FAST_ParameterType	IntKi	TrimCase	-	-	-	"Controller parameter to be trimmed {1:yaw; 2:torque; 3:pitch} [unused if Linearize=False; used only if CalcSteady=True]"	-
typedef	^	FAST_ParameterType	ReKi	TrimTol	-	-	-	"Tolerance for the rotational speed convergence (>0) [unused if Linearize=False; used only if CalcSteady=True]"	-
typedef	^	FAST_ParameterType	ReKi	TrimGain	-	-	-	"Proportional gain for the rotational speed error (>0) [unused if Linearize=False; used only if CalcSteady=True]"	"rad/(rad/s) for yaw or pitch; Nm/(rad/s) for torque"
typedef	^	FAST_ParameterType	ReKi	Twr_Kdmp	-	-	-	"Damping factor for the tower [unused if Linearize=False; used only if CalcSteady=True]"	"N/(m/s)"
typedef	^	FAST_ParameterType	ReKi	Bld_Kdmp	-	-	-	"Damping factor for the blades [unused if Linearize=False; used only if CalcSteady=True]"	"N/(m/s)"
typedef	^	FAST_ParameterType	IntKi	NLinTimes	-	-	-	"Number of LinTimes, or equally-spaced azimuth steps in periodic linearized model (>0)[unused if Linearize=False]"	-
typedef  ^  FAST_ParameterType  DbKi    AzimDelta   -  -  -  "difference between two consecutive azimuth positions in CalcSteady algorithm" rad

typedef	^	FAST_ParameterType	IntKi	LinInputs	-	-	-	"Inputs included in linearization (switch) {0=none; 1=standard; 2=all module inputs (debug)} [unused if Linearize=False]"	-
typedef	^	FAST_ParameterType	IntKi	LinOutputs	-	-	-	"Outputs included in linearization (switch) {0=none; 1=from OutList(s); 2=all module outputs (debug)} [unused if Linearize=False]"	-
typedef	^	FAST_ParameterType	LOGICAL	LinOutJac	-	-	-	"Include full Jacabians in linearization output (for debug) (flag) [unused if Linearize=False; used only if LinInputs=LinOutputs=2]"	-
typedef	^	FAST_ParameterType	LOGICAL	LinOutMod	-	-	-	"Write module-level linearization output files in addition to output for full system? (flag) [unused if Linearize=False]"	-

typedef	^	FAST_ParameterType	IntKi	Lin_NumMods	-	-	-	"number of modules in the linearization"
typedef	^	FAST_ParameterType	IntKi	Lin_ModOrder	{NumModules}	-	-	"indices that determine which order the modules are in the glue-code linearization matrix"
typedef  ^  FAST_ParameterType  IntKi    LinInterpOrder     -  -  -  "Interpolation order for CalcSteady solution" -
#typedef	^	FAST_ParameterType	LOGICAL	CheckHSSBrTrqC	-	-	-	"Flag to determine if we should check HSSBrTrqC extrapolation to ElastoDyn"	-

# Parameters for steady-state calculations:
typedef	^	FAST_ParameterType	LOGICAL	CompAeroMaps	-	-	-	"Flag to determine if we are calculating aero maps"	-
typedef	^	FAST_ParameterType	IntKi	N_UJac	-	-	-	"Number of iterations between re-calculating Jacobian"	"(-)"
typedef	^	FAST_ParameterType	IntKi	NumBl_Lin	-	-	-	"number of blades in the jacobian"	-
typedef	^	FAST_ParameterType	R8Ki	tolerSquared	-	-	-	"Convergence tolerance for nonlinear solve residual equation [>0] squared"	"(-)"
typedef	^	FAST_ParameterType	IntKi	NumSSCases	-	-	-	"Number of cases for steady-state solver generation [>0]"	"(-)"
typedef	^	FAST_ParameterType	IntKi	WindSpeedOrTSR	-	-	-	"Choice of swept parameter (switch) { 1:wind speed; 2: TSR }"	"(-)"
typedef	^	FAST_ParameterType	ReKi	RotSpeedInit	-	-	-	"Initial rotor speed for steady-state solve [>0]"	"(rad/s)"
typedef	^	FAST_ParameterType	ReKi	RotSpeed	{:}	-	-	"List of rotor speeds for steady-state solve [>0]"	"(rad/s)"
typedef	^	FAST_ParameterType	ReKi	WS_TSR	{:}	-	-	"List of WindSpeed or TSRs (depending on WindSpeedOrTSR setting) for aeromap generation"	"(m/s or -)"
typedef	^	FAST_ParameterType	ReKi	Pitch	{:}	-	-	"List of pitch angles for aeromap generation"	"(rad)"
typedef	^	FAST_ParameterType	IntKi	GearBox_index	-	-	-	"Index to gearbox rotation in state array (for steady-state calculations)"   -

# ..... FAST_LinFileType data .......................................................................................................
typedef	^	FAST_LinFileType	ReKi	RotSpeed	-	-	-	"Rotor azimuth angular speed"	rad/s
typedef	^	FAST_LinFileType	ReKi	Azimuth	-	-	-	"Rotor azimuth position"	rad
typedef	^	FAST_LinFileType	ReKi	WindSpeed	-	-	-	"Wind speed at reference height"	m/s

# ..... FAST_MiscLinType data .......................................................................................................
typedef  ^  FAST_MiscLinType  DbKi     LinTimes       {:} -  -  "List of times at which to linearize" s
typedef  ^  FAST_MiscLinType  IntKi    CopyOP_CtrlCode -  -  -  "mesh control code for copy type (new on first call; update otherwise)" -
typedef  ^  FAST_MiscLinType  DbKi     AzimTarget     {:} -  -  "target azimuth positions in CalcSteady algorithm" rad
typedef  ^  FAST_MiscLinType  logical  IsConverged     -  -  -  "whether the error calculation in the CalcSteady algorithm is converged" -
typedef  ^  FAST_MiscLinType  logical  FoundSteady     -  -  -  "whether the CalcSteady algorithm found a steady-state solution" -
typedef  ^  FAST_MiscLinType  logical  ForceLin        -  -  -  "whether the CalcSteady algorithm found a steady-state solution" -
typedef  ^  FAST_MiscLinType  IntKi    n_rot           -  -  -  "number of rotations completed in CalcSteady algorithm" -
typedef  ^  FAST_MiscLinType  IntKi    AzimIndx        -  -  -  "index into target azimuth array in CalcSteady algorithm" -
typedef  ^  FAST_MiscLinType  IntKi    NextLinTimeIndx -  -  -  "index for next time in LinTimes where linearization should occur" -
typedef  ^  FAST_MiscLinType  DbKi     Psi            {:} -  -  "Azimuth angle at the current and previous time steps (uses LinInterpOrder); DbKi so that we can use registry-generated extrap/interp routines" -
typedef  ^  FAST_MiscLinType  ReKi     y_interp       {:} -  -  "Interpolated outputs packed into an array" -
typedef  ^  FAST_MiscLinType  ReKi     y_ref          {:} -  -  "Reference output range for CalcSteady error calculation" -
typedef  ^  FAST_MiscLinType  ReKi     Y_prevRot   {:}{:} -  -  "Linearization outputs from previous rotor revolution at each target azimuth " -
#typedef  ^  FAST_MiscLinType  ReKi     eps_squared    {:} -  -  "For debugging, quantity of each component that contributes to eps_squared" -


# ..... FAST_OutputFileType data .......................................................................................................
typedef	FAST	FAST_OutputFileType	DbKi	TimeData	{:}	-	-	"Array to contain the time output data for the binary file (first output time and a time [fixed] increment)"
typedef	^	FAST_OutputFileType	ReKi	AllOutData	{:}{:}	-	-	"Array to contain all the output data (time history of all outputs); Index 1 is NumOuts, Index 2 is Time step"
typedef	^	FAST_OutputFileType	IntKi	n_Out	-	-	-	"Time index into the AllOutData array"
typedef	^	FAST_OutputFileType	IntKi	NOutSteps	-	-	-	"Maximum number of output steps"
typedef	^	FAST_OutputFileType	IntKi	numOuts	{NumModules}	-	-	"number of outputs to print from each module"
typedef	^	FAST_OutputFileType	IntKi	UnOu	-	-1	-	"I/O unit number for the tabular output file"
typedef	^	FAST_OutputFileType	IntKi	UnSum	-	-1	-	"I/O unit number for the summary file"
typedef	^	FAST_OutputFileType	IntKi	UnGra	-	-1	-	"I/O unit number for mesh graphics"
typedef	^	FAST_OutputFileType	CHARACTER(1024)	FileDescLines	{3}	-	-	"Description lines to include in output files (header, time run, plus module names/versions)"
typedef	^	FAST_OutputFileType	CHARACTER(ChanLen)	ChannelNames	{:}	-	-	"Names of the output channels"
typedef	^	FAST_OutputFileType	CHARACTER(ChanLen)	ChannelUnits	{:}	-	-	"Units for the output channels"
typedef	^	FAST_OutputFileType	ProgDesc	Module_Ver	{NumModules}	-	-	"version information from all modules"
typedef	^	FAST_OutputFileType	CHARACTER(ChanLen)	Module_Abrev	{NumModules}	-	-	"abbreviation for module (used in file output naming conventions)"
typedef	^	FAST_OutputFileType	LOGICAL	WriteThisStep	-	-	-	"Whether this step will be written in the FAST output files"
typedef	^	FAST_OutputFileType	IntKi	VTK_count	-	-	-	"Number of VTK files written (for naming output files)"
typedef	^	FAST_OutputFileType	IntKi	VTK_LastWaveIndx	-	-	-	"last index into wave array"	-
typedef	^	FAST_OutputFileType	FAST_LinFileType	Lin	-	-	-	"linearization data for output"
typedef	^	FAST_OutputFileType	IntKi	ActualChanLen	-	-	-	"width of the column headers output in the text and/or binary file"	-
typedef	^	FAST_OutputFileType	ReKi	DriverWriteOutput	{6}	-	-	"pitch and tsr for current aero map case, plus error, number of iterations, wind speed, rotor speed"
#typedef	^	FAST_OutputFileType	CHARACTER(ChanLen)	DriverWriteOutputHdr	{:}	-	-	"headers of data output from the driver"
#typedef	^	FAST_OutputFileType	CHARACTER(ChanLen)	DriverWriteOutputUnt	{:}	-	-	"units of data output from the driver"


# ..... IceDyn data .......................................................................................................
# [ the last dimension of each allocatable array is for the instance of IceDyn being used ]
# note that I'm making the allocatable-for-instance-used part INSIDE the data type (as opposed to an array of IceDyn_Data types) because I want to pass arrays of x, xd, z, x_pred, etc)
typedef	FAST	IceDyn_Data	IceD_ContinuousStateType	x	{:}{:}	-	-	"Continuous states"
typedef	^	^	IceD_DiscreteStateType	xd	{:}{:}	-	-	"Discrete states"
typedef	^	^	IceD_ConstraintStateType	z	{:}{:}	-	-	"Constraint states"
typedef	^	^	IceD_OtherStateType	OtherSt	{:}{:}	-	-	"Other states"
typedef	^	^	IceD_ParameterType	p	{:}	-	-	"Parameters"
typedef	^	^	IceD_OutputType	y	{:}	-	-	"System outputs"
typedef	^	^	IceD_MiscVarType	m	{:}	-	-	"Misc/optimization variables"
typedef	^	^	IceD_InputType	Input	{:}{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}{:}	-	-	"Array of times associated with Input Array"

# ..... BeamDyn data .......................................................................................................
# [ the last dimension of each allocatable array is for the instance of BeamDyn being used ]
# note that I'm making the allocatable-for-instance-used part INSIDE the data type (as opposed to an array of IceDyn_Data types) because I want to pass arrays of x, xd, z, x_pred, etc)
typedef	FAST	BeamDyn_Data	BD_ContinuousStateType	x	{:}{:}	-	-	"Continuous states"
typedef	^	^	BD_DiscreteStateType	xd	{:}{:}	-	-	"Discrete states"
typedef	^	^	BD_ConstraintStateType	z	{:}{:}	-	-	"Constraint states"
typedef	^	^	BD_OtherStateType	OtherSt	{:}{:}	-	-	"Other states"
typedef	^	^	BD_ParameterType	p	{:}	-	-	"Parameters"
typedef	^	^	BD_OutputType	y	{:}	-	-	"System outputs"
typedef	^	^	BD_MiscVarType	m	{:}	-	-	"Misc/optimization variables"
typedef	^	^	BD_InputType	Input	{:}{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}{:}	-	-	"Array of times associated with Input Array"

# ..... ElastoDyn data .......................................................................................................
typedef	FAST	ElastoDyn_Data	ED_ContinuousStateType	x	{:}{:}	-	-	"Continuous states"
typedef	^	^	ED_DiscreteStateType	xd	{:}{:}	-	-	"Discrete states"
typedef	^	^	ED_ConstraintStateType	z	{:}{:}	-	-	"Constraint states"
typedef	^	^	ED_OtherStateType	OtherSt	{:}{:}	-	-	"Other states"
typedef	^	^	ED_ParameterType	p	{:}	-	-	"Parameters"
typedef	^	^	ED_OutputType	y	{:}	-	-	"System outputs"
typedef	^	^	ED_MiscVarType	m	{:}	-	-	"Misc (optimization) variables not associated with time"
typedef	^	^	ED_InputType	Input	{:}{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}{:}	-	-	"Array of times associated with Input Array"


# ..... Simplified-ElastoDyn data ............................................................................................
typedef	FAST	SED_Data	SED_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	SED_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	SED_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	SED_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	SED_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	SED_OutputType	y	-	-	-	"System outputs"
typedef	^	^	SED_MiscVarType	m	-	-	-	"Misc (optimization) variables not associated with time"
typedef	^	^	SED_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"


# ..... ServoDyn data .......................................................................................................
typedef	FAST	ServoDyn_Data	SrvD_ContinuousStateType	x	{:}{:}	-	-	"Continuous states"
typedef	^	^	SrvD_DiscreteStateType	xd	{:}{:}	-	-	"Discrete states"
typedef	^	^	SrvD_ConstraintStateType	z	{:}{:}	-	-	"Constraint states"
typedef	^	^	SrvD_OtherStateType	OtherSt	{:}{:}	-	-	"Other states"
typedef	^	^	SrvD_ParameterType	p	{:}	-	-	"Parameters"
typedef	^	^	SrvD_OutputType	y	{:}	-	-	"System outputs"
typedef	^	^	SrvD_MiscVarType	m	{:}	-	-	"Misc (optimization) variables not associated with time"
typedef	^	^	SrvD_InputType	Input	{:}{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}{:}	-	-	"Array of times associated with Input Array"

# ..... AeroDyn data .......................................................................................................
typedef	FAST	AeroDyn_Data	AD_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	AD_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	AD_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	AD_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	AD_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	AD_OutputType	y	-	-	-	"System outputs"
typedef	^	^	AD_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	AD_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... ExtLoads data .......................................................................................................
typedef	FAST	ExtLoads_Data	ExtLd_ContinuousStateType	x	{NumStateTimes}	-	-	"Continuous states"
typedef	^	^	ExtLd_DiscreteStateType	xd	{NumStateTimes}	-	-	"Discrete states"
typedef	^	^	ExtLd_ConstraintStateType	z	{NumStateTimes}	-	-	"Constraint states"
typedef	^	^	ExtLd_OtherStateType	OtherSt	{NumStateTimes}	-	-	"Other states"
typedef	^	^	ExtLd_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	ExtLd_InputType	u	-	-	-	"System inputs"
typedef	^	^	ExtLd_OutputType	y	-	-	-	"System outputs"
typedef	^	^	ExtLd_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... AeroDisk data .......................................................................................................
typedef	FAST	AeroDisk_Data	ADsk_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	ADsk_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	ADsk_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	ADsk_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	ADsk_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	ADsk_OutputType	y	-	-	-	"System outputs"
typedef	^	^	ADsk_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	ADsk_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... InflowWind data .......................................................................................................
typedef	FAST	InflowWind_Data	InflowWind_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	InflowWind_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	InflowWind_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	InflowWind_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	InflowWind_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	InflowWind_OutputType	y	-	-	-	"System outputs"
typedef	^	^	InflowWind_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	InflowWind_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... ExternalInflow integration data .......................................................................................................
typedef	FAST	ExternalInflow_Data	ExtInfw_InputType	u	-	-	-	"System inputs"
typedef	^	^	ExtInfw_OutputType	y	-	-	-	"System outputs"
typedef	^	^	ExtInfw_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	ExtInfw_MiscVarType	m	-	-	-	"Parameters"

# ..... SubDyn data .......................................................................................................
typedef	FAST	SubDyn_Data	SD_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	SD_ContinuousStateType	dxdt	-	-	-	"Continuous state derivatives"
typedef	^	^	SD_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	SD_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	SD_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	SD_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	SD_OutputType	y	-	-	-	"System outputs"
typedef	^	^	SD_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	SD_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... ExtPtfm data .......................................................................................................
typedef	FAST	ExtPtfm_Data	ExtPtfm_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	ExtPtfm_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	ExtPtfm_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	ExtPtfm_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	ExtPtfm_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	ExtPtfm_OutputType	y	-	-	-	"System outputs"
typedef	^	^	ExtPtfm_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	ExtPtfm_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... SeaState data .......................................................................................................
typedef	FAST	SeaState_Data	SeaSt_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	SeaSt_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	SeaSt_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	SeaSt_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	SeaSt_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	SeaSt_OutputType	y	-	-	-	"System outputs"
typedef	^	^	SeaSt_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	SeaSt_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... HydroDyn data .......................................................................................................
typedef	FAST	HydroDyn_Data	HydroDyn_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	FAST	HydroDyn_Data	HydroDyn_ContinuousStateType	dxdt	-	-	-	"Continuous state derivatives"
typedef	^	^	HydroDyn_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	HydroDyn_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	HydroDyn_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	HydroDyn_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	HydroDyn_OutputType	y	-	-	-	"System outputs"
typedef	^	^	HydroDyn_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	HydroDyn_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... IceFloe data .......................................................................................................
typedef	FAST	IceFloe_Data	IceFloe_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	IceFloe_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	IceFloe_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	IceFloe_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	IceFloe_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	IceFloe_OutputType	y	-	-	-	"System outputs"
typedef	^	^	IceFloe_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	IceFloe_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... MAP data .......................................................................................................
typedef	FAST	MAP_Data	MAP_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	MAP_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	MAP_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	MAP_OtherStateType	OtherSt	-	-	-	"Other/optimization states"
typedef	^	^	MAP_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	MAP_OutputType	y	-	-	-	"System outputs"
typedef	^	^	MAP_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	MAP_OtherStateType	OtherSt_old	-	-	-	"Other/optimization states (copied for the case of subcycling)"
typedef	^	^	MAP_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... FEAMooring data .......................................................................................................
typedef	FAST	FEAMooring_Data	FEAM_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	FEAM_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	FEAM_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	FEAM_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	FEAM_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	FEAM_OutputType	y	-	-	-	"System outputs"
typedef	^	^	FEAM_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	FEAM_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... MoorDyn data .......................................................................................................
typedef	FAST	MoorDyn_Data	MD_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	MD_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	MD_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	MD_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	MD_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	MD_OutputType	y	-	-	-	"System outputs"
typedef	^	^	MD_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	MD_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... OrcaFlex data .......................................................................................................
typedef	FAST	OrcaFlex_Data	Orca_ContinuousStateType	x	{:}	-	-	"Continuous states"
typedef	^	^	Orca_DiscreteStateType	xd	{:}	-	-	"Discrete states"
typedef	^	^	Orca_ConstraintStateType	z	{:}	-	-	"Constraint states"
typedef	^	^	Orca_OtherStateType	OtherSt	{:}	-	-	"Other states"
typedef	^	^	Orca_ParameterType	p	-	-	-	"Parameters"
typedef	^	^	Orca_OutputType	y	-	-	-	"System outputs"
typedef	^	^	Orca_MiscVarType	m	-	-	-	"Misc/optimization variables"
typedef	^	^	Orca_InputType	Input	{:}	-	-	"Array of inputs associated with InputTimes"
typedef	^	^	DbKi	InputTimes	{:}	-	-	"Array of times associated with Input Array"

# ..... FAST_ExternalInput data .......................................................................................................
typedef	FAST	FAST_ExternInputType	ReKi	GenTrq	-	-	-	"generator torque input from Simulink/Labview"
typedef	^	FAST_ExternInputType	ReKi	ElecPwr	-	-	-	"electric power input from Simulink/Labview"
typedef	^	FAST_ExternInputType	ReKi	YawPosCom	-	-	2pi	"yaw position command from Simulink/Labview"
typedef	^	FAST_ExternInputType	ReKi	YawRateCom	-	-	-	"yaw rate command from Simulink/Labview"
typedef	^	FAST_ExternInputType	ReKi	BlPitchCom	3	-	2pi	"blade pitch commands from Simulink/Labview"	"rad"
typedef	^	FAST_ExternInputType	ReKi	BlAirfoilCom	3	-	-	"blade airfoil commands from Simulink/Labview"	"-"
typedef	^	FAST_ExternInputType	ReKi	HSSBrFrac	-	-	-	"Fraction of full braking torque: 0 (off) <= HSSBrFrac <= 1 (full) from Simulink or LabVIEW"
typedef	^	FAST_ExternInputType	ReKi	LidarFocus	3	-	-	"lidar focus (relative to lidar location)"	m
typedef	^	FAST_ExternInputType	ReKi	CableDeltaL	{20}	-	-	"Cable control DeltaL"	m
typedef	^	FAST_ExternInputType	ReKi	CableDeltaLdot	{20}	-	-	"Cable control DeltaLdot"	m/s

# ..... FAST_MiscVarType data .......................................................................................................
typedef	FAST	FAST_MiscVarType	DbKi	TiLstPrn	-	-	-	"The simulation time of the last print (to file)"	(s)
typedef	^	FAST_MiscVarType	DbKi	t_global	-	-	-	"Current simulation time (for global/FAST simulation)"	(s)
typedef	^	FAST_MiscVarType	ReKi	PrevClockTime	-	-	-	"Clock time at start of simulation in seconds"	(s)
typedef	^	FAST_MiscVarType	ReKi	UsrTime1	-	-	-	"User CPU time for simulation initialization"	(s)
typedef	^	FAST_MiscVarType	ReKi	UsrTime2	-	-	-	"User CPU time for simulation (without intialization)"	(s)
typedef	^	FAST_MiscVarType	INTEGER	StrtTime	{8}	-	-	"Start time of simulation (including intialization)"
typedef	^	FAST_MiscVarType	INTEGER	SimStrtTime	{8}	-	-	"Start time of simulation (after initialization)"
#typedef	^	FAST_MiscVarType	IntKi	n_t_global	-	-	-	"simulation time step, loop counter for global (FAST) simulation"	(s)
typedef	^	FAST_MiscVarType	FAST_ExternInputType	ExternInput	-	-	-	"external input values"	-
typedef	^	FAST_MiscVarType	FAST_MiscLinType	Lin	-	-	-	"misc data for linearization analysis"	-


# ..... FAST_InitData data .......................................................................................................
typedef   ^   FAST_InitData    ED_InitInputType             InData_ED       -  -  -  "ED Initialization input data"
typedef   ^   FAST_InitData    ED_InitOutputType           OutData_ED       :  -  -  "ED Initialization output data"
typedef   ^   FAST_InitData    SED_InitInputType            InData_SED      -  -  -  "SED Initialization input data"
typedef   ^   FAST_InitData    SED_InitOutputType          OutData_SED      -  -  -  "SED Initialization output data"
typedef   ^   FAST_InitData    BD_InitInputType             InData_BD       -  -  -  "BD Initialization input data"
typedef   ^   FAST_InitData    BD_InitOutputType           OutData_BD       :  -  -  "BD Initialization output data"
typedef   ^   FAST_InitData    SrvD_InitInputType           InData_SrvD     -  -  -  "SrvD Initialization input data"
typedef   ^   FAST_InitData    SrvD_InitOutputType         OutData_SrvD     :  -  -  "SrvD Initialization output data"
typedef   ^   FAST_InitData    AD_InitInputType             InData_AD       -  -  -  "AD Initialization input data"
typedef   ^   FAST_InitData    AD_InitOutputType           OutData_AD       -  -  -  "AD Initialization output data"
typedef   ^   FAST_InitData    ADsk_InitInputType           InData_ADsk     -  -  -  "ADsk Initialization input data"
typedef   ^   FAST_InitData    ADsk_InitOutputType         OutData_ADsk     -  -  -  "ADsk Initialization output data"
typedef   ^   FAST_InitData    ExtLd_InitInputType          InData_ExtLd     -  -  - "ExtLd Initialization input data"
typedef   ^   FAST_InitData    ExtLd_InitOutputType        OutData_ExtLd     -  -  - "ExtLd Initialization output data"
typedef   ^   FAST_InitData    InflowWind_InitInputType     InData_IfW      -  -  -  "IfW Initialization input data"
typedef   ^   FAST_InitData    InflowWind_InitOutputType   OutData_IfW      -  -  -  "IfW Initialization output data"
typedef   ^   FAST_InitData    ExtInfw_InitInputType        InData_ExtInfw     -  -  -  "ExtInfw Initialization input data"
typedef   ^   FAST_InitData    ExtInfw_InitOutputType      OutData_ExtInfw     -  -  -  "ExtInfw Initialization output data"
typedef   ^   FAST_InitData    SeaSt_InitInputType          InData_SeaSt    -  -  -  "SeaSt Initialization input data"
typedef   ^   FAST_InitData    SeaSt_InitOutputType        OutData_SeaSt    -  -  -  "SeaSt Initialization output data"
typedef   ^   FAST_InitData    HydroDyn_InitInputType       InData_HD       -  -  -  "HD Initialization input data"
typedef   ^   FAST_InitData    HydroDyn_InitOutputType     OutData_HD       -  -  -  "HD Initialization output data"
typedef   ^   FAST_InitData    SD_InitInputType             InData_SD       -  -  -  "SD Initialization input data"
typedef   ^   FAST_InitData    SD_InitOutputType           OutData_SD       -  -  -  "SD Initialization output data"
typedef   ^   FAST_InitData    ExtPtfm_InitInputType        InData_ExtPtfm  -  -  -  "ExtPtfm Initialization input data"
typedef   ^   FAST_InitData    ExtPtfm_InitOutputType      OutData_ExtPtfm  -  -  -  "ExtPtfm Initialization output data"
typedef   ^   FAST_InitData    MAP_InitInputType            InData_MAP      -  -  -  "MAP Initialization input data"
typedef   ^   FAST_InitData    MAP_InitOutputType          OutData_MAP      -  -  -  "MAP Initialization output data"
typedef   ^   FAST_InitData    FEAM_InitInputType           InData_FEAM     -  -  -  "FEAM Initialization input data"
typedef   ^   FAST_InitData    FEAM_InitOutputType         OutData_FEAM     -  -  -  "FEAM Initialization output data"
typedef   ^   FAST_InitData    MD_InitInputType             InData_MD       -  -  -  "MD Initialization input data"
typedef   ^   FAST_InitData    MD_InitOutputType           OutData_MD       -  -  -  "MD Initialization output data"
typedef   ^   FAST_InitData    Orca_InitInputType           InData_Orca     -  -  -  "Orca Initialization input data"
typedef   ^   FAST_InitData    Orca_InitOutputType         OutData_Orca     -  -  -  "Orca Initialization output data"
typedef   ^   FAST_InitData    IceFloe_InitInputType        InData_IceF     -  -  -  "IceF Initialization input data"
typedef   ^   FAST_InitData    IceFloe_InitOutputType      OutData_IceF     -  -  -  "IceF Initialization output data"
typedef   ^   FAST_InitData    IceD_InitInputType           InData_IceD     -  -  -  "IceD Initialization input data"
typedef   ^   FAST_InitData    IceD_InitOutputType         OutData_IceD     -  -  -  "IceD Initialization output data (each instance will have the same output channels)"


# ..... FAST External Initialization Input data .......................................................................................................
typedef	^	FAST_ExternInitType	DbKi	Tmax	-	-1	-	"External code specified Tmax"	s
typedef	^	FAST_ExternInitType	IntKi	TurbIDforName	-	-1	-	"ID number for turbine (used to create output file naming convention)"	-
typedef	^	FAST_ExternInitType	ReKi	TurbinePos	{3}	-	-	"Initial position of turbine base (origin used for graphics or in FAST.Farm)"	m
typedef ^   FAST_ExternInitType IntKi   WaveFieldMod -  -   -   "Wave field handling (-) (switch) 0: use individual HydroDyn inputs without adjustment, 1: adjust wave phases based on turbine offsets from farm origin"   -
typedef	^	FAST_ExternInitType	logical	FarmIntegration	-	.false.	-	"whether this is called from FAST.Farm (or another program that doesn't want FAST to call all of the init stuff first)"	-
typedef	^	FAST_ExternInitType	IntKi	windGrid_n	4	-	-	"number of grid points in the x, y, z, and t directions for IfW"	-
typedef	^	FAST_ExternInitType	ReKi	windGrid_delta	4	-	-	"size between 2 consecutive grid points in each grid direction for IfW"	"m,m,m,s"
typedef	^	FAST_ExternInitType	ReKi	windGrid_pZero	3	-	-	"fixed position of the XYZ grid (i.e., XYZ coordinates of IfW m%V(:,1,1,1,:))"	m
typedef	^	FAST_ExternInitType	SiKi	*windGrid_data	:::::	-	-	"Pointers to Wind velocity of disturbed wind (ambient + wakes) across each high-resolution domain around a turbine for each high-resolution step within a low-resolution step"      m/s
typedef	^	FAST_ExternInitType	CHARACTER(1024)	RootName	-	-	-	"Root name of FAST output files (overrides normal operation)"	-
typedef	^	FAST_ExternInitType	IntKi	NumActForcePtsBlade	-	-	-	"number of actuator line force points in blade"	-
typedef	^	FAST_ExternInitType	IntKi	NumActForcePtsTower	-	-	-	"number of actuator line force points in tower"	-
typedef ^   FAST_ExternInitType IntKi   NodeClusterType -     -     -   "Node clustering for actuator line (0 - Uniform, 1 - Non-uniform clustered towards tip)"   -
typedef ^   FAST_ExternInitType DbKi    DTdriver        -    -1     -   "External driver time step"  s
typedef ^   FAST_ExternInitType Logical TwrAero         -  .false.  -   "Is Tower aerodynamics enabled for ExtLoads module?"
typedef ^   FAST_ExternInitType ReKi    az_blend_mean   -     -     -   "Mean azimuth at which to blend the external and aerodyn loads" - 
typedef ^   FAST_ExternInitType ReKi    az_blend_delta  -     -     -   "Mean azimuth at which to blend the external and aerodyn loads" - 

# ..... FAST Turbine Data (one realization) .......................................................................................................
typedef	^	FAST_TurbineType	IntKi	TurbID	-	1	-	"Turbine ID Number"	-
typedef	^	FAST_TurbineType	FAST_ParameterType	p_FAST	-	-	-	"Parameters for the glue code"	-
typedef	^	FAST_TurbineType	FAST_OutputFileType	y_FAST	-	-	-	"Output variables for the glue code"	-
typedef	^	FAST_TurbineType	FAST_MiscVarType	m_FAST	-	-	-	"Miscellaneous variables"	-
typedef	^	FAST_TurbineType	Glue_ParameterType	p_Glue	-	-	-	"Parameters for the glue code"	-
typedef	^	FAST_TurbineType	Glue_OutputFileType	y_Glue	-	-	-	"Output variables for the glue code"	-
typedef	^	FAST_TurbineType	Glue_MiscVarType	m_Glue	-	-	-	"Miscellaneous variables"	-
typedef	^	FAST_TurbineType	ElastoDyn_Data	ED	-	-	-	"Data for the ElastoDyn module"	-
typedef	^	FAST_TurbineType	SED_Data	SED	-	-	-	"Data for the Simplified-ElastoDyn module"	-
typedef	^	FAST_TurbineType	BeamDyn_Data	BD	-	-	-	"Data for the BeamDyn module"	-
typedef	^	FAST_TurbineType	ServoDyn_Data	SrvD	-	-	-	"Data for the ServoDyn module"	-
typedef	^	FAST_TurbineType	AeroDyn_Data	AD	-	-	-	"Data for the AeroDyn module"	-
typedef	^	FAST_TurbineType	AeroDisk_Data	ADsk	-	-	-	"Data for the AeroDisk module"	-
typedef	^	FAST_TurbineType	ExtLoads_Data	ExtLd	-	-	-	"Data for the External loads module"	-
typedef	^	FAST_TurbineType	InflowWind_Data	IfW	-	-	-	"Data for InflowWind module"	-
typedef	^	FAST_TurbineType	ExternalInflow_Data	ExtInfw	-	-	-	"Data for ExternalInflow integration module"	-
typedef	^	FAST_TurbineType	SeaState_Data	SeaSt	-	-	-	"Data for the SeaState module"	-
typedef	^	FAST_TurbineType	HydroDyn_Data	HD	-	-	-	"Data for the HydroDyn module"	-
typedef	^	FAST_TurbineType	SubDyn_Data	SD	-	-	-	"Data for the SubDyn module"	-
typedef	^	FAST_TurbineType	MAP_Data	MAP	-	-	-	"Data for the MAP (Mooring Analysis Program) module"	-
typedef	^	FAST_TurbineType	FEAMooring_Data	FEAM	-	-	-	"Data for the FEAMooring module"	-
typedef	^	FAST_TurbineType	MoorDyn_Data	MD	-	-	-	"Data for the MoorDyn module"	-
typedef	^	FAST_TurbineType	OrcaFlex_Data	Orca	-	-	-	"Data for the OrcaFlex interface module"	-
typedef	^	FAST_TurbineType	IceFloe_Data	IceF	-	-	-	"Data for the IceFloe module"	-
typedef	^	FAST_TurbineType	IceDyn_Data	IceD	-	-	-	"Data for the IceDyn module"	-
typedef	^	FAST_TurbineType	ExtPtfm_Data	ExtPtfm	-	-	-	"Data for the ExtPtfm (external platform loading) module"	-
#typedef	^	FAST_TurbineType	FAST_InitData	Init	-	-	-	"Data for all modules at initialization"	-
