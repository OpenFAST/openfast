###################################################################################################################################
# Registry for Waves in the FAST Modularization Framework
# This Registry file is used to create MODULE Waves_Types  which contains all of the user-defined types needed in Waves.
# It also contains copy, destroy, pack,  and unpack routines associated with each defined data types.
# See NWTC Programmer's Handbook for further information on the format/contents of this file.
#
# Entries are of the form
# <keyword> <ModuleName/ModName> <TypeName>  <FieldType> <FieldName> <Dims>   <IO>  <DNAME>  <DESCRIP>   <UNITS>
#
# Use ^ as a shortcut for the value in the same column from the previous line.
###################################################################################################################################

# ...... Include files (definitions from NWTC Library) ............................................................................
# make sure that the file name does not have any trailing white spaces!
include  Registry_NWTC_Library.txt

# ..... Initialization data .......................................................................................................
# Define inputs that the initialization routine may need here:
#   e.g.,  the name of the input file,  the file root name,etc.
#
typedef     Waves/Waves       InitInputType     CHARACTER(1024)      InputFile         -        -        -        "Name of the input file"   -
typedef     ^                 ^                 CHARACTER(1024)      DirRoot           -        -        -        "The name of the root file including the full path.  This may be useful if you want this routine to write a permanent record of what it does to be stored with the simulation results: the results should be stored in a file whose name (including path) is generated by appending any suitable extension to DirRoot." -
typedef     ^                 ^                 CHARACTER(1024)      WvKinFile          -        -        -       "The root name of user input wave kinematics files" -
typedef     ^                 ^                 ReKi                 Gravity           -        -        -        "Gravitational acceleration"  (m/s^2)
typedef     ^                 ^                 integer              nGrid             3        -        -        "Grid dimensions"
typedef     ^                 ^                 SiKi                 WvLowCOff         -        -        -        "Low cut-off frequency or lower frequency limit of the wave spectrum beyond which the wave spectrum is zeroed.  [used only when WaveMod=2,3,4]"   (rad/s)
typedef     ^                 ^                 SiKi                 WvHiCOff          -        -        -        "High cut-off frequency or upper frequency limit of the wave spectrum beyond which the wave spectrum is zeroed.  [used only when WaveMod=2,3,4]"   (rad/s)
typedef     ^                 ^                 SiKi                 WaveDir           -        -        -        "Mean incident wave propagation heading direction"   (degrees)
typedef     ^                 ^                 INTEGER              WaveNDir          -        -        -        "Number of wave directions [only used if WaveDirMod = 1] [Must be an odd number -- will be adjusted within the waves module]"     (-)
typedef     ^                 ^                 LOGICAL              WaveMultiDir      -        -        -        "Indicates the waves are multidirectional -- set by HydroDyn_Input"  -
typedef     ^                 ^                 INTEGER              WaveDirMod        -        -        -        "Directional wave spreading function {0: none, 1: COS2S} [only used if WaveMod=6]"   -
typedef     ^                 ^                 SiKi                 WaveDirSpread     -        -        -        "Spreading coefficient [WaveMod=2,3,4 and WaveDirMod=1]"   -
typedef     ^                 ^                 SiKi                 WaveDirRange      -        -        -        "Range of wave directions (full range: WaveDir +/- WaveDirRange/2) [only used if WaveMod=6]"   (degrees)
typedef     ^                 ^                 DbKi                 WaveDT            -        -        -        "Time step for incident wave calculations"   (sec)
typedef     ^                 ^                 SiKi                 WaveHs            -        -        -        "Significant wave height of incident waves"  (meters)
typedef     ^                 ^                 INTEGER              WaveMod           -        -        -        "Incident wave kinematics model {0: none=still water, 1: plane progressive (regular), 2: JONSWAP/Pierson-Moskowitz spectrum (irregular), 3: white-noise spectrum, 4: user-defind spectrum from routine UserWaveSpctrm (irregular), 5: GH BLADED }" -
typedef     ^                 ^                 CHARACTER(80)        WaveModChr        -        -        -        "String to temporarially hold the value of the wave kinematics input line"
typedef     ^                 ^                 LOGICAL              WaveNDAmp         -        -        -        "Flag for normally-distributed amplitudes in incident waves spectrum [flag]"  -
typedef     ^                 ^                 SiKi                 WavePhase         -        -        -        "Specified phase for regular waves"    (radians)
typedef     ^                 ^                 SiKi                 WavePkShp         -        -        -        "Peak shape parameter of incident wave spectrum [1.0 for Pierson-Moskowitz]"  -
typedef     ^                 ^                 CHARACTER(80)        WavePkShpChr      -        -        -        "String to temporarially hold value of peak shape parameter input line" -
typedef     ^                 ^                 INTEGER              WaveSeed          {2}      -        -        "Random seeds of incident waves [-2147483648 to 2147483647]"   -
typedef     ^                 ^                 INTEGER              WaveStMod         -        -        -        "Model for stretching incident wave kinematics to instantaneous free surface {0: none=no stretching, 1: vertical stretching, 2: extrapolation stretching, 3: Wheeler stretching}"   -
typedef     ^                 ^                 DbKi                 WaveTMax          -        -        -        "Analysis time for incident wave calculations; the actual analysis time may be larger than this value in order for the maintain an effecient FFT"  (sec)
typedef     ^                 ^                 SiKi                 WaveTp            -        -        -        "Peak spectral period of incident waves"  (sec)
typedef     ^                 ^                 ReKi                 WtrDens           -        -        -        "Water density"   (kg/m^3)
typedef     ^                 ^                 ReKi                 WtrDpth           -        -        -        "Water depth"  (meters)
typedef     ^                 ^                 INTEGER              NWaveElevGrid     -        -        -        "Number of grid points where the incident wave elevations are computed (the XY grid point locations)"  -
typedef     ^                 ^                 INTEGER              NWaveKinGrid      -        -        -        "Number of grid points where the incident wave kinematics will be computed"  -
typedef     ^                 ^                 SiKi                 WaveKinGridxi     {:}      -        -        "xi-coordinates for grid points where the incident wave kinematics will be computed (grid points); these are relative to the mean sea level"  (meters)
typedef     ^                 ^                 SiKi                 WaveKinGridyi     {:}      -        -        "yi-coordinates for grid points where the incident wave kinematics will be computed (grid points); these are relative to the mean sea level"  (meters)
typedef     ^                 ^                 SiKi                 WaveKinGridzi     {:}      -        -        "zi-coordinates for grid points where the incident wave kinematics will be computed (grid points); these are relative to the mean sea level"  (meters)
typedef     ^                 ^                 SiKi                 CurrVxi           {:}      -        -        "xi-component of the current velocity at elevation i" (m/s)
typedef     ^                 ^                 SiKi                 CurrVyi           {:}      -        -        "yi-component of the current velocity at elevation i" (m/s)
typedef     ^                 ^                 SiKi                 PCurrVxiPz0       -        -        -        "xi-component of the partial derivative of the current velocity at elevation near mean sea level"  (m/s)
typedef     ^                 ^                 SiKi                 PCurrVyiPz0       -        -        -        "yi-component of the partial derivative of the current velocity at elevation near mean sea level"  (m/s)
typedef     ^                 ^                NWTC_RandomNumber_ParameterType RNG     -        -        -        "Parameters for the pseudo random number generator"  -
typedef     ^                 ^                 INTEGER              ConstWaveMod      -        -        -        "Mode of the constrained wave" -
typedef     ^                 ^                 SiKi                 CrestHmax         -        -        -        "crest height or double the crest elevation" m
typedef     ^                 ^                 SiKi                 CrestTime         -        -        -        "time of the wave crest" sec
typedef     ^                 ^                 SiKi                 CrestXi           -        -        -        "xi-coordinate for the wave crest" m
typedef     ^                 ^                 SiKi                 CrestYi           -        -        -        "yi-coordinate for the wave crest" m
typedef     ^                 ^                 SiKi                 MCFD              -        -        -        "Diameter of members that will use the MacCamy-Fuchs diffraction model"
typedef     ^                 ^                 INTEGER              WaveFieldMod      -        -        -        "Wave field handling (-) (switch) 0: use individual SeaState inputs without adjustment, 1: adjust wave phases based on turbine offsets from farm origin"   -
typedef     ^                 ^                 ReKi                 PtfmLocationX     -        -        -        "Supplied by Driver:  X coordinate of platform location in the wave field"    "m"
typedef     ^                 ^                 ReKi                 PtfmLocationY     -        -        -        "Supplied by Driver:  Y coordinate of platform location in the wave field"    "m"

# Define outputs from the initialization routine here:
#
typedef     ^                 InitOutputType    SiKi                 WaveElevC0        {*}{*}   -        -        "Discrete Fourier transform of the instantaneous elevation of incident waves at the platform reference point.  First column is real part, second column is imaginary part"   (meters)
typedef     ^                 InitOutputType    SiKi                 WaveElevC         {:}{:}{:}   -        -     "Discrete Fourier transform of the instantaneous elevation of incident waves at all grid points.  First column is real part, second column is imaginary part"   (meters)
typedef     ^                 ^                 SiKi                 WaveDirArr        {*}      -        -        "Wave direction array.  Each frequency has a unique direction of WaveNDir > 1" (degrees)
typedef     ^                 ^                 SiKi                 WaveDirMin        -        -        -        "Minimum wave direction."  (degrees)
typedef     ^                 ^                 SiKi                 WaveDirMax        -        -        -        "Maximum wave direction."  (degrees)
typedef     ^                 ^                 INTEGER              WaveNDir          -        -        -        "Number of wave directions [only used if WaveDirMod = 1] [Must be an odd number -- will be adjusted within the waves module]"     (-)
typedef     ^                 ^                 SiKi                 WaveDOmega        -        -        -        "Frequency step for incident wave calculations" (rad/s)
typedef     ^                 ^                 SiKi                 WaveDynP          {*}{*}{*}{*}   -        -        "Instantaneous dynamic pressure of incident waves                                                          , accounting for stretching, at each of the NWaveKinGrid points where the incident wave kinematics will be computed" (N/m^2)
typedef     ^                 ^                 SiKi                 WaveAcc           {*}{*}{*}{*}{*} -       -        "Instantaneous acceleration of incident waves in the xi- (1), yi- (2), and zi- (3) directions, respectively, accounting for stretching, at each of the NWaveKinGrid points where the incident wave kinematics will be computed" (m/s^2)
typedef     ^                 ^                 SiKi                 WaveAccMCF        {*}{*}{*}{*}{*} -       -        "Instantaneous acceleration of incident waves in the xi- (1), yi- (2), and zi- (3) directions, respectively, accounting for stretching, at each of the NWaveKinGrid points where the incident wave kinematics will be computed" (m/s^2)
typedef     ^                 ^                 SiKi                 WaveVel           {*}{*}{*}{*}{*} -       -        "Instantaneous velocity     of incident waves in the xi- (1), yi- (2), and zi- (3) directions, respectively, accounting for stretching, at each of the NWaveKinGrid points where the incident wave kinematics will be computed (The values include both the velocity of incident waves and the velocity of current.)" (m/s)
typedef     ^                 ^                 SiKi                 PWaveDynP0        {*}{*}{*}   -        -        "Instantaneous dynamic pressure of incident waves                                                          , at the location (xi,yi,0), at each of the NWaveKinGrid points where the incident wave kinematics will be computed" (N/m^2)
typedef     ^                 ^                 SiKi                 PWaveAcc0         {*}{*}{*}{*} -       -        "Instantaneous acceleration of incident waves in the xi- (1), yi- (2), and zi- (3) directions, respectively, at the location (xi,yi,0), at each of the NWaveKinGrid points where the incident wave kinematics will be computed" (m/s^2)
typedef     ^                 ^                 SiKi                 PWaveAccMCF0      {*}{*}{*}{*} -       -        "Instantaneous acceleration of incident waves in the xi- (1), yi- (2), and zi- (3) directions, respectively, at the location (xi,yi,0), at each of the NWaveKinGrid points where the incident wave kinematics will be computed" (m/s^2)
typedef     ^                 ^                 SiKi                 PWaveVel0         {*}{*}{*}{*} -       -        "Instantaneous velocity     of incident waves in the xi- (1), yi- (2), and zi- (3) directions, respectively, at the location (xi,yi,0), at each of the NWaveKinGrid points where the incident wave kinematics will be computed (The values include both the velocity of incident waves and the velocity of current.)" (m/s)
typedef     ^                 ^                 SiKi                 WaveElev          {*}{*}{*}   -        -        "Instantaneous elevation time-series of incident waves at each of the  XY grid points" (meters)
typedef     ^                 ^                 SiKi                 WaveElev0         {:}      -        -        "Instantaneous elevation time-series of incident waves at the platform reference point" (meters)
typedef     ^                 ^                 SiKi                 WaveTime          {*}      -        -        "Simulation times at which the instantaneous elevation of, velocity of, acceleration of, and loads associated with the incident waves are determined" (sec)
typedef     ^                 ^                 DbKi                 WaveTMax          -        -        -        "Analysis time for incident wave calculations; the actual analysis time may be larger than this value in order for the maintain an effecient FFT"  (sec)
typedef     ^                 ^                 SiKi                 RhoXg             -        -        -        "= WtrDens*Gravity" -
typedef     ^                 ^                 INTEGER              NStepWave         -        -        -        "Total number of frequency components = total number of time steps in the incident wave" -
typedef     ^                 ^                 INTEGER              NStepWave2        -        -        -        "NStepWave / 2" -

