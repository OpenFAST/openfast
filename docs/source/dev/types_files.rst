.. _types_files:

Types Files and the OpenFAST Registry
=====================================
Being a modern software project, OpenFAST has a complex system of custom data
types. In Fortran, these are known as "derived data types." Each module
contains a unique collection of derived types which may add on to but must
comply with the OpenFAST Framework. The module types are generally
auto-generated by an included program called *OpenFAST Registry*. The OpenFAST
Registry is written in C and adapted from a similar utility used in
`WRF <http://www.mmm.ucar.edu/wrf/WG2/software_2.0/registry_schaffer.pdf>`__.
Visit the `OpenFAST Registry README <https://github.com/OpenFAST/openfast/tree/master/modules/openfast-registry>`__
for more information.

The OpenFAST Registry requires an input file to describe the necessary types
for a given module. Generally, all module use a similar naming convention,
**<Module>_Registry.txt**, and resulting Fortran code will be in a file
called **<Module>_Types.f90**. For example, the AeroDyn OpenFAST Registry input
file is located at ``openfast/modules/aerodyn/src/AeroDyn_Registry.txt`` and
the resulting auto-generated Fortran source code is at
``openfast/modules/aerodyn/src/AeroDyn_Types.f90``.

Since the types-modules are autogenerated, any changes to the data types
directly should be expressed in the OpenFAST Registry input files so that the
changes are not subsequently overwritten.

Generating new types modules
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The OpenFAST Registry is included in the OpenFAST build system through CMake.
However, the default is to **not** compile the OpenFAST Registry executable and
instead use the types modules that are included in *git* while compiling
OpenFAST.

To modify the types modules and run the OpenFAST Registry, configure CMake with
the ``GENERATE_TYPES`` flag:

.. code-block:: bash

    cmake .. -DGENERATE_TYPES=ON

This instructs the build system to compile the OpenFAST Registry executable
and use it to autogenerate the types modules during the compile process.

With ``GENERATE_TYPES`` enabled, CMake will configure the `openfast-registry`
target to compile as a dependency of all other targets. An additional step
will be added to the build process to run the OpenFAST Registry and overwrite
the existing types modules. For modules where the registry input file has not
changed, the resulting types module will not change. However, for registry
input files that have been modified, the output types module will be
recompiled. The OpenFAST Registry executable will be found in
``openfast/build/modules/openfast-registry/openfast-registry``.
