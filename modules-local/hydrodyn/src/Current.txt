###################################################################################################################################
# Registry for Waves in the FAST Modularization Framework
# This Registry file is used to create MODULE Current_Types  which contains all of the user-defined types needed in Current.
# It also contains copy, destroy, pack,  and unpack routines associated with each defined data types.
# See NWTC Programmer's Handbook for further information on the format/contents of this file.
#
# Entries are of the form
# <keyword>         <ModuleName/ModName>          <TypeName>          <FieldType>         <FieldName>         <Dims>    <IO>      <DNAME>   <DESCRIP> <UNITS>
#
# Use ^ as a shortcut for the value in the same column from the previous line.
###################################################################################################################################

# ...... Include files (definitions from NWTC Library) ............................................................................
# make sure that the file name does not have any trailing white spaces!
include Registry_NWTC_Library.txt

# ..... Initialization data .......................................................................................................
# Define inputs that the initialization routine may need here:
#   e.g.,  the name of the input file,  the file root name,etc.
#
typedef   Current/Current     InitInputType                 SiKi              CurrSSV0               -          -        -         ""    -
typedef   ^                   ^                             CHARACTER(80)     CurrSSDirChr           -          -        -         ""    -
typedef   ^                   ^                             SiKi              CurrSSDir              -          -        -         ""    -
typedef   ^                   ^                             SiKi              CurrNSRef              -          -        -         ""    -
typedef   ^                   ^                             SiKi              CurrNSV0               -          -        -         ""    -
typedef   ^                   ^                             SiKi              CurrNSDir              -          -        -         ""    -
typedef   ^                   ^                             SiKi              CurrDIV                -          -        -         ""    -
typedef   ^                   ^                             SiKi              CurrDIDir              -          -        -         ""    -
typedef   ^                   ^                             INTEGER           CurrMod                -          -        -         ""    -
typedef   ^                   ^                             SiKi              WtrDpth                -          -        -         ""    -
typedef   ^                   ^                             SiKi              MorisonNodezi         {:}         -        -         ""    -
typedef   ^                   ^                             INTEGER           NMorisonNodes          -          -        -         ""    -
typedef   ^                   ^                             CHARACTER(1024)   DirRoot                -         ""        -         ""    -
#
#
# Define outputs from the initialization routine here:
#
typedef   ^                   InitOutputType                SiKi              CurrVxi               {:}         -        -         ""  -
typedef   ^                   ^                             SiKi              CurrVyi               {:}         -        -         ""  -
typedef   ^                   ^                             SiKi              PCurrVxiPz0            -          -        -         ""  -
typedef   ^                   ^                             SiKi              PCurrVyiPz0            -          -        -         ""  -
#
#
# ..... States ....................................................................................................................
# Define continuous (differentiable) states here:
#
typedef   ^                   ContinuousStateType SiKi                DummyContState      -         -         -         "Remove this variable if you have continuous states"        -
#
#
# Define discrete (nondifferentiable) states here:
#
typedef   ^                   DiscreteStateType   SiKi                DummyDiscState      -         -         -         "Remove this variable if you have discrete states"          -
#
#
# Define constraint states here:
#
typedef   ^                   ConstraintStateType SiKi                DummyConstrState    -         -         -         "Remove this variable if you have constraint states"        -
#
#
# Define any other states, including integer or logical states here:
typedef   ^               OtherStateType      IntKi    DummyOtherState - - - "Remove this variable if you have other states" -


# ..... Misc/Optimization variables.................................................................................................
# Define any data that are used only for efficiency purposes (these variables are not associated with time):
#   e.g. indices for searching in an array, large arrays that are local variables in any routine called multiple times, etc.
typedef    ^              MiscVarType          ReKi     DummyMiscVar - - -  "Remove this variable if you have misc/optimization variables" -

# ..... Parameters ................................................................................................................
# Define parameters here:
# Time step for integration of continuous states (if a fixed-step integrator is used) and update of discrete states:
#
typedef   ^                   ParameterType                 DbKi                DT        -         -         -         "Time step for continuous state integration and discrete state update"  seconds
#
#
# ..... Inputs ....................................................................................................................
# Define inputs that are contained on the mesh here:
#
#typedef^           InputType           MeshType  MeshedInput         -         -         -         "Meshed input data" -
# Define inputs that are not on this mesh here:
typedef   ^                   InputType           SiKi                DummyInput          -         -         -         "Remove this variable if you have input data"     -
#
#
# ..... Outputs ...................................................................................................................
# Define outputs that are contained on the mesh here:
#typedef^           OutputType                    MeshType  MeshedOutput        -         -         -         "Meshed output data"          -
# Define outputs that are not on this mesh here:
typedef   ^                   OutputType                    SiKi                DummyOutput         -         -         -         "Remove this variable if you have output data"    -