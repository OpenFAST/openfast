  
name: 'Development Pipeline'

on:
  push:
    paths-ignore:
      - 'LICENSE'
      - 'README.rst'
      - 'docs/**'
      - 'share/**'
      - 'vs-build/**'

  pull_request:
    types: [opened, synchronize, edited, reopened] #labeled, assigned]
    # Pull request event triggers are unrelated to paths
    # paths-ignore:

env:
  FORTRAN_COMPILER: gfortran-10
  CXX_COMPILER: g++-10
  C_COMPILER: gcc-10
  GCOV_EXE: gcov-10
  NUM_PROCS: 8


jobs:

  regression-tests-debug:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macOS-11
            FORTRAN_COMPILER: gfortran-11
            install_deps: brew install gcovr
          - os: ubuntu-20.04
            FORTRAN_COMPILER: gfortran-10
            install_deps: sudo apt-get install -y gcovr

    name: regression-test-debug-${{ matrix.os }}-${{ matrix.FORTRAN_COMPILER }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy Bokeh==1.4
          ${{matrix.install_deps}}

      - name: Setup Workspace
        run: cmake -E make_directory ${{runner.workspace}}/openfast/build
      - name: Configure Build
        working-directory: ${{runner.workspace}}/openfast/build
        run: |
          cmake \
            -DCMAKE_INSTALL_PREFIX:PATH=${{runner.workspace}}/openfast/install \
            -DCMAKE_Fortran_COMPILER:STRING=${{matrix.FORTRAN_COMPILER}} \
            -DCMAKE_CXX_COMPILER:STRING=${{env.CXX_COMPILER}} \
            -DCMAKE_C_COMPILER:STRING=${{env.C_COMPILER}} \
            -DCMAKE_BUILD_TYPE:STRING=Debug \
            -DBUILD_TESTING:BOOL=ON \
            -DCODECOV:BOOL=ON \
            -DCTEST_PLOT_ERRORS:BOOL=ON \
            ${GITHUB_WORKSPACE}

      - name: Build Drivers
        working-directory: ${{runner.workspace}}/openfast/build
        run: |
          cmake --build . --target aerodyn_driver -- -j ${{env.NUM_PROCS}}

      - name: Run AeroDyn tests
        uses: ./.github/actions/tests-module-aerodyn
        with:
          test-target: regression

      - name: Success artifacts
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: regression-tests-debug
          path: |
            ${{runner.workspace}}/openfast/regressioncov.xml
      - name: Failing test artifacts
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: regression-tests-debug
          path: |
            ${{runner.workspace}}/openfast/build/reg_tests/modules


